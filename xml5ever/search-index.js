var searchIndex = {};
searchIndex["xml5ever"] = {"doc":"This crate provides a push based XML parser library that\nadheres to XML5 specification. In other words this library\ntrades well-formedness for error recovery.","items":[[5,"parse_to","xml5ever","Parse and send results to a `TreeSink`.",null,{"inputs":[{"name":"sink"},{"name":"it"},{"name":"xmltokenizeropts"}],"output":{"name":"sink"}}],[5,"parse","","Parse into a type which implements `ParseResult`.",null,{"inputs":[{"name":"it"},{"name":"xmltokenizeropts"}],"output":{"name":"output"}}],[5,"tokenize_to","","Tokenize and send results to a `XTokenSink`.",null,{"inputs":[{"name":"sink"},{"name":"it"},{"name":"xmltokenizeropts"}],"output":{"name":"sink"}}],[0,"tendril","","Re-export the tendril crate so that users donâ€™t need to depend on it.",null,null],[0,"tokenizer","","XML5 tokenizer - converts input into tokens",null,null],[3,"Attribute","xml5ever::tokenizer","A tag attribute.",null,null],[12,"name","","Qualified name of attribute.",0,null],[12,"value","","Attribute&#39;s value.",0,null],[3,"Doctype","","A `DOCTYPE` token.\nDoctype token in XML5 is rather limited for reasons, such as:\nsecurity and simplicity. XML5 only supports declaring DTD with\nname, public identifier and system identifier",null,null],[12,"name","","Name of DOCTYPE declared",1,null],[12,"public_id","","Public identifier of this DOCTYPE.",1,null],[12,"system_id","","System identifier of this DOCTYPE.",1,null],[3,"Pi","","A ProcessingInstruction token.",null,null],[12,"target","","What is the name of processing instruction.",2,null],[12,"data","","Text of processing instruction.",2,null],[3,"QName","","Fully qualified name. Used to depict names of tags and attributes.",null,null],[12,"prefix","","Prefix of fully qualified name, used for namespace lookup.",3,null],[12,"local","","Local name of a value.",3,null],[12,"namespace_url","","Resolved namespace of `QName`.",3,null],[3,"Tag","","XML 5 Tag Token",null,null],[12,"kind","","Token kind denotes which type of token was encountered.\nE.g. if parser parsed `&lt;/a&gt;` the token kind would be `EndTag`.",4,null],[12,"name","","Qualified name of the tag.",4,null],[12,"attrs","","List of attributes attached to this tag.\nOnly valid in start and empty tag.",4,null],[3,"XmlTokenizerOpts","","Copy of Tokenizer options, with an impl for `Default`.",null,null],[12,"exact_errors","","Report all parse errors described in the spec, at some\nperformance penalty?  Default: false",5,null],[12,"discard_bom","","Discard a `U+FEFF BYTE ORDER MARK` if we see one at the beginning\nof the stream?  Default: true",5,null],[12,"profile","","Keep a record of how long we spent in each state?  Printed\nwhen `end()` is called.  Default: false",5,null],[12,"initial_state","","Initial state override.  Only the test runner should use\na non-`None` value!",5,null],[3,"XmlTokenizer","","The Xml tokenizer.",null,null],[4,"TagKind","","Tag kind denotes which kind of tag did we encounter.",null,null],[13,"StartTag","","Beginning of a tag (e.g. `&lt;a&gt;`).",6,null],[13,"EndTag","","End of a tag (e.g. `&lt;/a&gt;`).",6,null],[13,"EmptyTag","","Empty tag (e.g. `&lt;a/&gt;`).",6,null],[13,"ShortTag","","Short tag (e.g. `&lt;/&gt;`).",6,null],[4,"Token","","Describes tokens encountered during parsing of input.",null,null],[13,"DoctypeToken","","Doctype token",7,null],[13,"TagToken","","Token tag founds. This token applies to all\npossible kinds of tags (like start, end, empty tag, etc.).",7,null],[13,"PIToken","","Processing Instruction token",7,null],[13,"CommentToken","","Comment token.",7,null],[13,"CharacterTokens","","Token that represents a series of characters.",7,null],[13,"EOFToken","","End of File found.",7,null],[13,"NullCharacterToken","","NullCharacter encountered.",7,null],[13,"ParseError","","Error happened",7,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"cmp","","",3,null],[11,"partial_cmp","","",3,null],[11,"lt","","",3,null],[11,"le","","",3,null],[11,"gt","","",3,null],[11,"ge","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"new","","Constructs a new `QName` from prefix and local part.\nNamespace is set to empty atom.",3,{"inputs":[{"name":"atom"},{"name":"atom"}],"output":{"name":"qname"}}],[11,"new_empty","","Constructs a new `QName` with only local part.\nNamespace is set to empty atom.",3,{"inputs":[{"name":"atom"}],"output":{"name":"qname"}}],[11,"fmt","","",6,null],[11,"clone","","",6,null],[11,"hash","","",6,null],[11,"eq","","",6,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"equiv_modulo_attr_order","","Sorts attributes in a tag.",4,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"new","","Constructs an empty DOCTYPE, with all fields set to None.",1,{"inputs":[],"output":{"name":"doctype"}}],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[0,"states","","Tokenizer states.",null,null],[8,"TokenSink","","Types which can receive tokens from the tokenizer.",null,null],[10,"process_token","","Process a token.",8,null],[11,"query_state_change","","The tokenizer will call this after emitting any start tag.\nThis allows the tree builder to change the tokenizer&#39;s state.\nBy default no state changes occur.",8,null],[11,"clone","","",5,null],[11,"default","","",5,{"inputs":[],"output":{"name":"xmltokenizeropts"}}],[11,"new","","Create a new tokenizer which feeds tokens to a particular `TokenSink`.",9,{"inputs":[{"name":"sink"},{"name":"xmltokenizeropts"}],"output":{"name":"xmltokenizer"}}],[11,"unwrap","","Returns destination of token events.",9,null],[11,"sink","","Immutably borrows destination of token events.",9,null],[11,"sink_mut","","Mutably borrows destinantion of token events.",9,null],[11,"feed","","Feed an input string into the tokenizer.",9,null],[11,"run","","Run the state machine for as long as we can.",9,null],[11,"end","","Indicate that we have reached the end of the input.",9,null],[0,"tree_builder","xml5ever","XML5 tree builder - converts tokens into a tree like structure",null,null],[3,"XmlTreeBuilder","xml5ever::tree_builder","The XML tree builder.",null,null],[0,"interface","","The interface for consumers of the tree builder (and thus the\nparser overall).",null,null],[4,"NodeOrText","xml5ever::tree_builder::interface","Something which can be inserted into the DOM.",null,null],[13,"AppendNode","","Appends next element like it is a node",10,null],[13,"AppendText","","Appends next element as if it was a text element",10,null],[4,"NextParserState","","Whether to interrupt further parsing of the current input until\nthe next explicit resumption of the tokenizer, or continue without\nany interruption.",null,null],[13,"Suspend","","Stop further parsing.",11,null],[13,"Continue","","Continue without interruptions.",11,null],[8,"TreeSink","","Types which can process tree modifications from the tree builder.",null,null],[16,"Handle","","`Handle` is a reference to a DOM node.  The tree builder requires\nthat a `Handle` implements `Clone` to get another reference to\nthe same node.",12,null],[10,"parse_error","","Signal a parse error.",12,null],[10,"get_document","","Get a handle to the `Document` node.",12,null],[10,"elem_name","","What is the name of this element?",12,null],[10,"create_element","","Create an element.",12,null],[10,"create_comment","","Create a comment node.",12,null],[10,"create_pi","","Create a Processing Instruction node.",12,null],[10,"append","","Append a node as the last child of the given node.  If this would\nproduce adjacent sibling text nodes, it should concatenate the text\ninstead.",12,null],[10,"append_doctype_to_document","","Append a `DOCTYPE` element to the `Document` node.",12,null],[11,"mark_script_already_started","","Mark a HTML `&lt;script&gt;` as &quot;already started&quot;.",12,null],[11,"complete_script","","Indicate that a `script` element is complete.",12,null],[8,"Tracer","","Trace hooks for a garbage-collected DOM.",null,null],[16,"Handle","","Reference to a generic DOM node.",13,null],[10,"trace_handle","","Upon a call to `trace_handles`, the tree builder will call this method\nfor each handle in its internal state.",13,null],[11,"fmt","","",11,null],[11,"hash","","",11,null],[11,"clone","","",11,null],[11,"eq","","",11,null],[11,"new","xml5ever::tree_builder","Create a new tree builder which sends tree modifications to a particular `TreeSink`.",14,{"inputs":[{"name":"sink"}],"output":{"name":"xmltreebuilder"}}],[11,"unwrap","","Returns consumer of tree modifications.",14,null],[11,"sink","","Immutably borrows consumer of tree modifications.",14,null],[11,"sink_mut","","Mutably borrows consumer of tree modifications.",14,null],[11,"trace_handles","","Call the `Tracer`&#39;s `trace_handle` method on every `Handle` in the tree builder&#39;s\ninternal state.  This is intended to support garbage-collected DOMs.",14,null],[11,"process_token","","",14,null],[11,"query_state_change","","",14,null],[0,"rcdom","xml5ever","A simple reference-counted that serves as a default tree structure\nA simple reference-counted DOM.",null,null],[3,"Node","xml5ever::rcdom","A simple DOM node.",null,null],[12,"node","","Represents this node&#39;s data.",15,null],[12,"parent","","Parent node.",15,null],[12,"children","","Child nodes of this node.",15,null],[3,"Handle","","Reference to a DOM node.",null,null],[3,"RcDom","","The DOM itself; the result of parsing.",null,null],[12,"document","","The `Document` itself.",16,null],[12,"errors","","Errors that occurred during parsing.",16,null],[4,"NodeEnum","","The different kinds of nodes in the DOM.",null,null],[13,"Document","","The `Document` itself.",17,null],[13,"Doctype","","A `DOCTYPE` with name, public id, and system id.",17,null],[13,"Text","","A text node.",17,null],[13,"Comment","","A comment.",17,null],[13,"Element","","An element with attributes.",17,null],[13,"PI","","A Processing instruction.",17,null],[6,"WeakHandle","","Weak reference to a DOM node, used for parent pointers.",null,null],[11,"fmt","","",17,null],[11,"clone","","",18,null],[11,"deref","","",18,null],[11,"parse_error","","",16,null],[11,"get_document","","",16,null],[11,"elem_name","","",16,null],[11,"create_element","","",16,null],[11,"create_comment","","",16,null],[11,"create_pi","","",16,null],[11,"append","","",16,null],[11,"append_doctype_to_document","","",16,null],[11,"default","","",16,{"inputs":[],"output":{"name":"rcdom"}}],[11,"get_result","","",16,{"inputs":[{"name":"rcdom"}],"output":{"name":"rcdom"}}],[8,"ParseResult","xml5ever","Results which can be extracted from a `TreeSink`.",null,null],[16,"Sink","","Type of consumer of tree modifications.\nIt also extends `Default` for convenience.",19,null],[10,"get_result","","Returns parsed tree data type",19,{"inputs":[{"name":"sink"}],"output":{"name":"self"}}],[11,"query_state_change","xml5ever::tokenizer","The tokenizer will call this after emitting any start tag.\nThis allows the tree builder to change the tokenizer&#39;s state.\nBy default no state changes occur.",8,null]],"paths":[[3,"Attribute"],[3,"Doctype"],[3,"Pi"],[3,"QName"],[3,"Tag"],[3,"XmlTokenizerOpts"],[4,"TagKind"],[4,"Token"],[8,"TokenSink"],[3,"XmlTokenizer"],[4,"NodeOrText"],[4,"NextParserState"],[8,"TreeSink"],[8,"Tracer"],[3,"XmlTreeBuilder"],[3,"Node"],[3,"RcDom"],[4,"NodeEnum"],[3,"Handle"],[8,"ParseResult"]]};
searchIndex["string_cache"] = {"doc":"","items":[[0,"atom","string_cache","",null,null],[3,"Atom","string_cache::atom","",null,null],[3,"BorrowedAtom","","",null,null],[12,"0","","",0,null],[7,"STATIC_ATOM_SET","","",null,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"hash","","",1,null],[11,"deref","","",0,null],[11,"eq","","",0,null],[11,"get_hash","","",1,null],[11,"with_str","","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"from","","",1,{"inputs":[{"name":"cow"}],"output":{"name":"atom"}}],[11,"from","","",1,{"inputs":[{"name":"str"}],"output":{"name":"atom"}}],[11,"from","","",1,{"inputs":[{"name":"string"}],"output":{"name":"atom"}}],[11,"clone","","",1,null],[11,"drop","","",1,null],[11,"deref","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"as_ref","","",1,null],[11,"serialize","","",1,null],[11,"deserialize","","",1,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"to_ascii_uppercase","","",1,null],[11,"to_ascii_lowercase","","",1,null],[11,"eq_ignore_ascii_case","","",1,null],[11,"eq_str_ignore_ascii_case","","",1,null],[0,"namespace","string_cache","**Note:** This may move as string-cache becomes less Web-specific.",null,null],[3,"Namespace","string_cache::namespace","An atom that is meant to represent a namespace in the HTML / XML sense.\nWhether a given string represents a namespace is contextual, so this is\na transparent wrapper that will not catch all mistakes.",null,null],[12,"0","","",2,null],[3,"BorrowedNamespace","","",null,null],[12,"0","","",3,null],[3,"QualName","","A name with a namespace.",null,null],[12,"ns","","",4,null],[12,"local","","",4,null],[11,"default","","",2,{"inputs":[],"output":{"name":"namespace"}}],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"hash","","",2,null],[11,"cmp","","",2,null],[11,"partial_cmp","","",2,null],[11,"lt","","",2,null],[11,"le","","",2,null],[11,"gt","","",2,null],[11,"ge","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"deref","","",3,null],[11,"eq","","",3,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"hash","","",4,null],[11,"cmp","","",4,null],[11,"partial_cmp","","",4,null],[11,"lt","","",4,null],[11,"le","","",4,null],[11,"gt","","",4,null],[11,"ge","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"new","","",4,{"inputs":[{"name":"namespace"},{"name":"atom"}],"output":{"name":"qualname"}}],[0,"shared","string_cache","",null,null],[3,"StaticAtomSet","string_cache::shared","",null,null],[12,"key","","",5,null],[12,"disps","","",5,null],[12,"atoms","","",5,null],[5,"pack_static","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u64"}}],[17,"DYNAMIC_TAG","","",null,null],[17,"INLINE_TAG","","",null,null],[17,"STATIC_TAG","","",null,null],[17,"TAG_MASK","","",null,null],[17,"ENTRY_ALIGNMENT","","",null,null],[17,"MAX_INLINE_LEN","","",null,null],[17,"STATIC_SHIFT_BITS","","",null,null],[11,"get_index_or_hash","","",5,null],[11,"index","","",5,null],[11,"iter","","",5,null],[14,"qualname!","string_cache","",null,null],[14,"ns!","","",null,null],[14,"atom!","","",null,null]],"paths":[[3,"BorrowedAtom"],[3,"Atom"],[3,"Namespace"],[3,"BorrowedNamespace"],[3,"QualName"],[3,"StaticAtomSet"]]};
searchIndex["tendril"] = {"doc":"","items":[[3,"Tendril","tendril","Compact string type for zero-copy parsing.",null,null],[3,"SendTendril","","A simple wrapper to make `Tendril` `Send`.",null,null],[3,"Atomic","","A marker of an atomic (and hence concurrent) tendril.",null,null],[3,"NonAtomic","","A marker of a non-atomic tendril.",null,null],[4,"SubtendrilError","","Errors that can occur when slicing a `Tendril`.",null,null],[13,"OutOfBounds","","",0,null],[13,"ValidationFailed","","",0,null],[0,"fmt","","Marker types for formats.",null,null],[3,"Bytes","tendril::fmt","Marker type for uninterpreted bytes.",null,null],[3,"ASCII","","Marker type for ASCII text.",null,null],[3,"UTF8","","Marker type for UTF-8 text.",null,null],[3,"WTF8","","Marker type for WTF-8 text.",null,null],[3,"Latin1","","Marker type for the single-byte encoding of the first 256 Unicode codepoints.",null,null],[0,"imp","","Implementation details.",null,null],[3,"Fixup","tendril::fmt::imp","Describes how to fix up encodings when concatenating.",null,null],[12,"drop_left","","",1,null],[12,"drop_right","","",1,null],[12,"insert_len","","",1,null],[12,"insert_bytes","","",1,null],[3,"SingleByteCharIndices","","",null,null],[11,"default","","",1,{"inputs":[],"output":{"name":"fixup"}}],[11,"next","","",2,null],[11,"new","","",2,null],[8,"Format","tendril::fmt","Trait for format marker types.",null,null],[10,"validate","","Check whether the buffer is valid for this format.",3,null],[11,"validate_prefix","","Check whether the buffer is valid for this format.",3,null],[11,"validate_suffix","","Check whether the buffer is valid for this format.",3,null],[11,"validate_subseq","","Check whether the buffer is valid for this format.",3,null],[11,"fixup","","Compute any fixup needed when concatenating buffers.",3,null],[8,"SubsetOf","","Indicates that one format is a subset of another.",null,null],[11,"revalidate_subset","","Validate the *other* direction of conversion; check if\nthis buffer from the superset format conforms to the\nsubset format.",4,null],[8,"SliceFormat","","Indicates a format which corresponds to a Rust slice type,\nrepresenting exactly the same invariants.",null,null],[16,"Slice","","",5,null],[8,"CharFormat","","Indicates a format which contains characters from Unicode\n(all of it, or some proper subset).",null,null],[16,"Iter","","Iterator for characters and their byte indices.",6,null],[10,"char_indices","","Iterate over the characters of the string and their byte\nindices.",6,null],[10,"encode_char","","Encode the character as bytes and pass them to a continuation.",6,{"inputs":[{"name":"char"},{"name":"f"}],"output":{"name":"result"}}],[8,"Slice","","Indicates a Rust slice type that is represented in memory as bytes.",null,null],[10,"as_bytes","","Access the raw bytes of the slice.",7,null],[10,"from_bytes","","Convert a byte slice to this kind of slice.",7,null],[10,"from_mut_bytes","","Convert a byte slice to this kind of slice.",7,null],[11,"fmt","","",8,null],[11,"default","","",8,{"inputs":[],"output":{"name":"bytes"}}],[11,"clone","","",8,null],[11,"validate","","",8,null],[11,"fmt","","",9,null],[11,"default","","",9,{"inputs":[],"output":{"name":"ascii"}}],[11,"clone","","",9,null],[11,"validate","","",9,null],[11,"validate_prefix","","",9,null],[11,"validate_suffix","","",9,null],[11,"validate_subseq","","",9,null],[11,"char_indices","","",9,null],[11,"encode_char","","",9,{"inputs":[{"name":"char"},{"name":"f"}],"output":{"name":"result"}}],[11,"fmt","","",10,null],[11,"default","","",10,{"inputs":[],"output":{"name":"utf8"}}],[11,"clone","","",10,null],[11,"validate","","",10,null],[11,"validate_prefix","","",10,null],[11,"validate_suffix","","",10,null],[11,"validate_subseq","","",10,null],[11,"char_indices","","",10,null],[11,"encode_char","","",10,{"inputs":[{"name":"char"},{"name":"f"}],"output":{"name":"result"}}],[11,"fmt","","",11,null],[11,"default","","",11,{"inputs":[],"output":{"name":"wtf8"}}],[11,"clone","","",11,null],[11,"validate","","",11,null],[11,"validate_prefix","","",11,null],[11,"validate_suffix","","",11,null],[11,"validate_subseq","","",11,null],[11,"fixup","","",11,null],[11,"fmt","","",12,null],[11,"default","","",12,{"inputs":[],"output":{"name":"latin1"}}],[11,"clone","","",12,null],[11,"validate","","",12,null],[11,"validate_prefix","","",12,null],[11,"validate_suffix","","",12,null],[11,"validate_subseq","","",12,null],[11,"char_indices","","",12,null],[11,"encode_char","","",12,{"inputs":[{"name":"char"},{"name":"f"}],"output":{"name":"result"}}],[0,"stream","tendril","Streams of tendrils.",null,null],[3,"Utf8LossyDecoder","tendril::stream","A `TendrilSink` adaptor that takes bytes, decodes them as UTF-8,\nlossily replace ill-formed byte sequences with U+FFFD replacement characters,\nand emits Unicode (`StrTendril`).",null,null],[12,"inner_sink","","",13,null],[3,"LossyDecoder","","A `TendrilSink` adaptor that takes bytes, decodes them as the given character encoding,\nlossily replace ill-formed byte sequences with U+FFFD replacement characters,\nand emits Unicode (`StrTendril`).",null,null],[8,"TendrilSink","","Trait for types that can process a tendril.",null,null],[10,"process","","Process this tendril.",14,null],[10,"error","","Indicates that an error has occurred.",14,null],[16,"Output","","What the overall result of processing is.",14,null],[10,"finish","","Indicates the end of the stream.",14,null],[11,"one","","Process one tendril and finish.",14,null],[11,"from_iter","","Consume an iterator of tendrils, processing each item, then finish.",14,null],[11,"read_from","","Read from the given stream of bytes until exhaustion and process incrementally,\nthen finish. Return `Err` at the first I/O error.",14,null],[11,"from_file","","Read from the file at the given path and process incrementally,\nthen finish. Return `Err` at the first I/O error.",14,null],[11,"new","","Create a new incremental UTF-8 decoder.",13,{"inputs":[{"name":"sink"}],"output":{"name":"self"}}],[11,"process","","",13,null],[11,"error","","",13,null],[11,"finish","","",13,null],[11,"new","","Create a new incremental decoder.",15,{"inputs":[{"name":"encodingref"},{"name":"sink"}],"output":{"name":"lossydecoder"}}],[11,"utf8","","Create a new incremental decoder for the UTF-8 encoding.",15,{"inputs":[{"name":"sink"}],"output":{"name":"lossydecoder"}}],[11,"inner_sink","","Give a reference to the inner sink.",15,null],[11,"inner_sink_mut","","Give a mutable reference to the inner sink.",15,null],[11,"process","","",15,null],[11,"error","","",15,null],[11,"finish","","",15,null],[0,"encoding","tendril","Re-export the rust-encoding crate.",null,null],[11,"new","","",16,{"inputs":[],"output":{"name":"self"}}],[11,"increment","","",16,null],[11,"decrement","","",16,null],[11,"fence_acquire","","",16,{"inputs":[],"output":null}],[11,"new","","",17,{"inputs":[],"output":{"name":"self"}}],[11,"increment","","",17,null],[11,"decrement","","",17,null],[11,"fence_acquire","","",17,{"inputs":[],"output":null}],[11,"eq","","",0,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"clone","","",0,null],[11,"clone","","",18,null],[11,"drop","","",18,null],[11,"extend","","",18,null],[11,"from_iter","","",18,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"extend","","",18,null],[11,"from_iter","","",18,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"extend","","",18,null],[11,"from_iter","","",18,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"extend","","",18,null],[11,"from_iter","","",18,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"extend","","",18,null],[11,"from_iter","","",18,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"extend","","",18,null],[11,"from_iter","","",18,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"deref","","",18,null],[11,"deref_mut","","",18,null],[11,"borrow","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"partial_cmp","","",18,null],[11,"cmp","","",18,null],[11,"default","","",18,{"inputs":[],"output":{"name":"tendril"}}],[11,"fmt","","",18,null],[11,"hash","","",18,null],[11,"new","","Create a new, empty `Tendril` in any format.",18,{"inputs":[],"output":{"name":"tendril"}}],[11,"with_capacity","","Create a new, empty `Tendril` with a specified capacity.",18,{"inputs":[{"name":"u32"}],"output":{"name":"tendril"}}],[11,"reserve","","Reserve space for additional bytes.",18,null],[11,"len32","","Get the length of the `Tendril`.",18,null],[11,"is_shared","","Is the backing buffer shared?",18,null],[11,"is_shared_with","","Is the backing buffer shared with this other `Tendril`?",18,null],[11,"clear","","Truncate to length 0 without discarding any owned storage.",18,null],[11,"try_from_byte_slice","","Build a `Tendril` by copying a byte slice, if it conforms to the format.",18,null],[11,"as_bytes","","View as uninterpreted bytes.",18,null],[11,"into_bytes","","Convert into uninterpreted bytes.",18,null],[11,"into_send","","Convert `self` into a type which is `Send`.",18,null],[11,"as_superset","","View as a superset format, for free.",18,null],[11,"into_superset","","Convert into a superset format, for free.",18,null],[11,"try_as_subset","","View as a subset format, if the `Tendril` conforms to that subset.",18,null],[11,"try_into_subset","","Convert into a subset format, if the `Tendril` conforms to that subset.",18,null],[11,"try_reinterpret_view","","View as another format, if the bytes of the `Tendril` are valid for\nthat format.",18,null],[11,"try_reinterpret","","Convert into another format, if the `Tendril` conforms to that format.",18,null],[11,"try_push_bytes","","Push some bytes onto the end of the `Tendril`, if they conform to the\nformat.",18,null],[11,"push_tendril","","Push another `Tendril` onto the end of this one.",18,null],[11,"try_subtendril","","Attempt to slice this `Tendril` as a new `Tendril`.",18,null],[11,"subtendril","","Slice this `Tendril` as a new `Tendril`.",18,null],[11,"try_pop_front","","Try to drop `n` bytes from the front.",18,null],[11,"pop_front","","Drop `n` bytes from the front.",18,null],[11,"try_pop_back","","Drop `n` bytes from the back.",18,null],[11,"pop_back","","Drop `n` bytes from the back.",18,null],[11,"reinterpret_view_without_validating","","View as another format, without validating.",18,null],[11,"reinterpret_without_validating","","Convert into another format, without validating.",18,null],[11,"from_byte_slice_without_validating","","Build a `Tendril` by copying a byte slice, without validating.",18,null],[11,"push_bytes_without_validating","","Push some bytes onto the end of the `Tendril`, without validating.",18,null],[11,"unsafe_subtendril","","Slice this `Tendril` as a new `Tendril`.",18,null],[11,"unsafe_pop_front","","Drop `n` bytes from the front.",18,null],[11,"unsafe_pop_back","","Drop `n` bytes from the back.",18,null],[11,"from_slice","","Build a `Tendril` by copying a slice.",18,{"inputs":[{"name":"slice"}],"output":{"name":"tendril"}}],[11,"push_slice","","Push a slice onto the end of the `Tendril`.",18,null],[11,"from","","",19,{"inputs":[{"name":"tendril"}],"output":{"name":"sendtendril"}}],[11,"from","","",18,{"inputs":[{"name":"sendtendril"}],"output":{"name":"tendril"}}],[11,"pop_front_char","","Remove and return the first character, if any.",18,null],[11,"pop_front_char_run","","Remove and return a run of characters at the front of the `Tendril`\nwhich are classified the same according to the function `classify`.",18,null],[11,"try_push_char","","Push a character, if it can be represented in this format.",18,null],[11,"write","","",18,null],[11,"write_all","","",18,null],[11,"flush","","",18,null],[11,"write_byte","","",18,null],[11,"write_bytes","","",18,null],[11,"writer_hint","","",18,null],[11,"decode","","Decode from some character encoding into UTF-8.",18,null],[11,"push_uninitialized","","Push &quot;uninitialized bytes&quot; onto the end.",18,null],[11,"fmt","","",18,null],[11,"from_str","","",18,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","",18,null],[11,"write_char","","",18,null],[11,"write_str","","",18,null],[11,"writer_hint","","",18,null],[11,"encode","","Encode from UTF-8 into some other character encoding.",18,null],[11,"push_char","","Push a character onto the end.",18,null],[11,"from_char","","Create a `Tendril` from a single character.",18,{"inputs":[{"name":"char"}],"output":{"name":"tendril"}}],[11,"format","","Helper for the `format_tendril!` macro.",18,{"inputs":[{"name":"arguments"}],"output":{"name":"tendril"}}],[11,"from","","",18,{"inputs":[{"name":"slice"}],"output":{"name":"tendril"}}],[11,"from","","",18,{"inputs":[{"name":"string"}],"output":{"name":"tendril"}}],[11,"as_ref","","",18,null],[6,"ByteTendril","","`Tendril` for storing binary data.",null,null],[6,"StrTendril","","`Tendril` for storing native Rust strings.",null,null],[8,"SliceExt","","`Tendril`-related methods for Rust slices.",null,null],[11,"to_tendril","","Make a `Tendril` from this slice.",20,null],[8,"ReadExt","","Extension trait for `io::Read`.",null,null],[10,"read_to_tendril","","",21,null],[8,"Atomicity","","The multithreadedness of a tendril.",null,null],[14,"format_tendril!","","Create a `StrTendril` through string formatting.",null,null],[11,"to_tendril","","Make a `Tendril` from this slice.",20,null]],"paths":[[4,"SubtendrilError"],[3,"Fixup"],[3,"SingleByteCharIndices"],[8,"Format"],[8,"SubsetOf"],[8,"SliceFormat"],[8,"CharFormat"],[8,"Slice"],[3,"Bytes"],[3,"ASCII"],[3,"UTF8"],[3,"WTF8"],[3,"Latin1"],[3,"Utf8LossyDecoder"],[8,"TendrilSink"],[3,"LossyDecoder"],[3,"NonAtomic"],[3,"Atomic"],[3,"Tendril"],[3,"SendTendril"],[8,"SliceExt"],[8,"ReadExt"]]};
searchIndex["serde"] = {"doc":"Serde Serialization Framework","items":[[0,"bytes","serde","Helper module to enable serializing bytes more efficiently",null,null],[3,"ByteBuf","serde::bytes","`ByteBuf` wraps a `Vec&lt;u8&gt;` and serializes as a byte array.",null,null],[3,"ByteBufVisitor","","This type implements the `serde::de::Visitor` trait for a `ByteBuf`.",null,null],[3,"Bytes","","`Bytes` wraps a `&amp;[u8]` in order to serialize into a byte array.",null,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"hash","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"bytebuf"}}],[11,"clone","","",0,null],[11,"new","","Construct a new, empty `ByteBuf`.",0,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Construct a new, empty `ByteBuf` with the specified capacity.",0,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"fmt","","",0,null],[11,"into","","",0,null],[11,"from","","",0,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"as_ref","","",0,null],[11,"as_ref","","",0,null],[11,"as_mut","","",0,null],[11,"as_mut","","",0,null],[11,"deref","","",0,null],[11,"deref_mut","","",0,null],[11,"serialize","","",0,null],[11,"visit_unit","","",1,null],[11,"visit_seq","","",1,null],[11,"visit_bytes","","",1,null],[11,"visit_byte_buf","","",1,null],[11,"deserialize","","",0,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"cmp","","",2,null],[11,"partial_cmp","","",2,null],[11,"lt","","",2,null],[11,"le","","",2,null],[11,"gt","","",2,null],[11,"ge","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"hash","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"from","","",2,null],[11,"from","","",2,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"into","","",2,null],[11,"deref","","",2,null],[11,"serialize","","",2,null],[0,"de","serde","Generic deserialization framework.",null,null],[4,"Type","serde::de","`Type` represents all the primitive types that can be deserialized. This is used by\n`Error::invalid_type`.",null,null],[13,"Bool","","Represents a `bool` type.",3,null],[13,"Usize","","Represents a `usize` type.",3,null],[13,"U8","","Represents a `u8` type.",3,null],[13,"U16","","Represents a `u16` type.",3,null],[13,"U32","","Represents a `u32` type.",3,null],[13,"U64","","Represents a `u64` type.",3,null],[13,"Isize","","Represents a `isize` type.",3,null],[13,"I8","","Represents a `i8` type.",3,null],[13,"I16","","Represents a `i16` type.",3,null],[13,"I32","","Represents a `i32` type.",3,null],[13,"I64","","Represents a `i64` type.",3,null],[13,"F32","","Represents a `f32` type.",3,null],[13,"F64","","Represents a `f64` type.",3,null],[13,"Char","","Represents a `char` type.",3,null],[13,"Str","","Represents a `&amp;str` type.",3,null],[13,"String","","Represents a `String` type.",3,null],[13,"Unit","","Represents a `()` type.",3,null],[13,"Option","","Represents an `Option&lt;T&gt;` type.",3,null],[13,"Seq","","Represents a sequence type.",3,null],[13,"Map","","Represents a map type.",3,null],[13,"UnitStruct","","Represents a unit struct type.",3,null],[13,"NewtypeStruct","","Represents a newtype type.",3,null],[13,"TupleStruct","","Represents a tuple struct type.",3,null],[13,"Struct","","Represents a struct type.",3,null],[13,"FieldName","","Represents a struct field name.",3,null],[13,"Tuple","","Represents a tuple type.",3,null],[13,"Enum","","Represents an `enum` type.",3,null],[13,"VariantName","","Represents an enum variant name.",3,null],[13,"StructVariant","","Represents a struct variant.",3,null],[13,"TupleVariant","","Represents a tuple variant.",3,null],[13,"UnitVariant","","Represents a unit variant.",3,null],[13,"Bytes","","Represents a `&amp;[u8]` type.",3,null],[0,"impls","","This module contains `Deserialize` and `Visitor` implementations.",null,null],[3,"UnitVisitor","serde::de::impls","A visitor that produces a `()`.",null,null],[3,"BoolVisitor","","A visitor that produces a `bool`.",null,null],[3,"PhantomDataVisitor","","A visitor that produces a `PhantomData`.",null,null],[3,"BinaryHeapVisitor","","A visitor that produces a sequence.",null,null],[3,"BTreeSetVisitor","","A visitor that produces a sequence.",null,null],[3,"LinkedListVisitor","","A visitor that produces a sequence.",null,null],[3,"HashSetVisitor","","A visitor that produces a sequence.",null,null],[3,"VecVisitor","","A visitor that produces a sequence.",null,null],[3,"VecDequeVisitor","","A visitor that produces a sequence.",null,null],[3,"TupleVisitor1","","Construct a tuple visitor.",null,null],[3,"TupleVisitor2","","Construct a tuple visitor.",null,null],[3,"TupleVisitor3","","Construct a tuple visitor.",null,null],[3,"TupleVisitor4","","Construct a tuple visitor.",null,null],[3,"TupleVisitor5","","Construct a tuple visitor.",null,null],[3,"TupleVisitor6","","Construct a tuple visitor.",null,null],[3,"TupleVisitor7","","Construct a tuple visitor.",null,null],[3,"TupleVisitor8","","Construct a tuple visitor.",null,null],[3,"TupleVisitor9","","Construct a tuple visitor.",null,null],[3,"TupleVisitor10","","Construct a tuple visitor.",null,null],[3,"TupleVisitor11","","Construct a tuple visitor.",null,null],[3,"TupleVisitor12","","Construct a tuple visitor.",null,null],[3,"TupleVisitor13","","Construct a tuple visitor.",null,null],[3,"TupleVisitor14","","Construct a tuple visitor.",null,null],[3,"TupleVisitor15","","Construct a tuple visitor.",null,null],[3,"TupleVisitor16","","Construct a tuple visitor.",null,null],[3,"BTreeMapVisitor","","A visitor that produces a map.",null,null],[3,"HashMapVisitor","","A visitor that produces a map.",null,null],[3,"IgnoredAny","","A target for deserializers that want to ignore data. Implements\nDeserialize and silently eats data given to it.",null,null],[11,"visit_unit","","",4,null],[11,"visit_seq","","",4,null],[11,"visit_bool","","",5,null],[11,"visit_str","","",5,null],[11,"visit_unit","","",6,null],[11,"new","","Construct a new sequence visitor.",7,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",7,null],[11,"visit_seq","","",7,null],[11,"new","","Construct a new sequence visitor.",8,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",8,null],[11,"visit_seq","","",8,null],[11,"new","","Construct a new sequence visitor.",9,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",9,null],[11,"visit_seq","","",9,null],[11,"new","","Construct a new sequence visitor.",10,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",10,null],[11,"visit_seq","","",10,null],[11,"new","","Construct a new sequence visitor.",11,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",11,null],[11,"visit_seq","","",11,null],[11,"new","","Construct a new sequence visitor.",12,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",12,null],[11,"visit_seq","","",12,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",13,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",13,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",14,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",14,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",15,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",15,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",16,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",16,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",17,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",17,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",18,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",18,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",19,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",19,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",20,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",20,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",21,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",21,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",22,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",22,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",23,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",23,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",24,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",24,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",25,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",25,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",26,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",26,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",27,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",27,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",28,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",28,null],[11,"new","","Construct a `MapVisitor*&lt;T&gt;`.",29,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",29,null],[11,"visit_map","","",29,null],[11,"new","","Construct a `MapVisitor*&lt;T&gt;`.",30,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",30,null],[11,"visit_map","","",30,null],[11,"deserialize","","",31,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[0,"value","serde::de","This module supports deserializing from primitives with the `ValueDeserializer` trait.",null,null],[3,"UnitDeserializer","serde::de::value","A helper deserializer that deserializes a `()`.",null,null],[3,"BoolDeserializer","","A helper deserializer that deserializes a number.",null,null],[3,"I8Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"I16Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"I32Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"I64Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"IsizeDeserializer","","A helper deserializer that deserializes a number.",null,null],[3,"U8Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"U16Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"U32Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"U64Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"UsizeDeserializer","","A helper deserializer that deserializes a number.",null,null],[3,"F32Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"F64Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"CharDeserializer","","A helper deserializer that deserializes a number.",null,null],[3,"StrDeserializer","","A helper deserializer that deserializes a `&amp;str`.",null,null],[3,"StringDeserializer","","A helper deserializer that deserializes a `String`.",null,null],[3,"SeqDeserializer","","A helper deserializer that deserializes a sequence.",null,null],[3,"SeqVisitorDeserializer","","A helper deserializer that deserializes a sequence using a `SeqVisitor`.",null,null],[3,"MapDeserializer","","A helper deserializer that deserializes a map.",null,null],[3,"MapVisitorDeserializer","","A helper deserializer that deserializes a map using a `MapVisitor`.",null,null],[3,"BytesDeserializer","","A helper deserializer that deserializes a `&amp;[u8]`.",null,null],[3,"ByteBufDeserializer","","A helper deserializer that deserializes a `Vec&lt;u8&gt;`.",null,null],[4,"Error","","This represents all the possible errors that can occur using the `ValueDeserializer`.",null,null],[13,"Custom","","The value had some custom error.",32,null],[13,"InvalidType","","The value had an incorrect type.",32,null],[13,"InvalidLength","","The value had an invalid length.",32,null],[13,"InvalidValue","","The value is invalid and cannot be deserialized.",32,null],[13,"EndOfStream","","EOF while deserializing a value.",32,null],[13,"UnknownVariant","","Unknown variant in enum.",32,null],[13,"UnknownField","","Unknown field in struct.",32,null],[13,"MissingField","","Struct is missing a field.",32,null],[8,"ValueDeserializer","","This trait converts primitive types into a deserializer.",null,null],[16,"Deserializer","","The actual deserializer type.",33,null],[10,"into_deserializer","","Convert this value into a deserializer.",33,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"fmt","","",32,null],[11,"clone","","",32,null],[11,"custom","","",32,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"end_of_stream","","",32,{"inputs":[],"output":{"name":"self"}}],[11,"invalid_type","","",32,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"invalid_value","","",32,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"invalid_length","","",32,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"unknown_variant","","",32,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"unknown_field","","",32,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"missing_field","","",32,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"fmt","","",32,null],[11,"description","","",32,null],[11,"cause","","",32,null],[11,"deserialize_bool","","",34,null],[11,"deserialize_f64","","",34,null],[11,"deserialize_f32","","",34,null],[11,"deserialize_u8","","",34,null],[11,"deserialize_u16","","",34,null],[11,"deserialize_u32","","",34,null],[11,"deserialize_u64","","",34,null],[11,"deserialize_usize","","",34,null],[11,"deserialize_i8","","",34,null],[11,"deserialize_i16","","",34,null],[11,"deserialize_i32","","",34,null],[11,"deserialize_i64","","",34,null],[11,"deserialize_isize","","",34,null],[11,"deserialize_char","","",34,null],[11,"deserialize_str","","",34,null],[11,"deserialize_string","","",34,null],[11,"deserialize_ignored_any","","",34,null],[11,"deserialize_bytes","","",34,null],[11,"deserialize_unit_struct","","",34,null],[11,"deserialize_unit","","",34,null],[11,"deserialize_seq","","",34,null],[11,"deserialize_seq_fixed_size","","",34,null],[11,"deserialize_map","","",34,null],[11,"deserialize_newtype_struct","","",34,null],[11,"deserialize_struct_field","","",34,null],[11,"deserialize_tuple","","",34,null],[11,"deserialize_enum","","",34,null],[11,"deserialize_struct","","",34,null],[11,"deserialize_tuple_struct","","",34,null],[11,"deserialize","","",34,null],[11,"deserialize_option","","",34,null],[11,"deserialize_bool","","",35,null],[11,"deserialize_f64","","",35,null],[11,"deserialize_f32","","",35,null],[11,"deserialize_u8","","",35,null],[11,"deserialize_u16","","",35,null],[11,"deserialize_u32","","",35,null],[11,"deserialize_u64","","",35,null],[11,"deserialize_usize","","",35,null],[11,"deserialize_i8","","",35,null],[11,"deserialize_i16","","",35,null],[11,"deserialize_i32","","",35,null],[11,"deserialize_i64","","",35,null],[11,"deserialize_isize","","",35,null],[11,"deserialize_char","","",35,null],[11,"deserialize_str","","",35,null],[11,"deserialize_string","","",35,null],[11,"deserialize_ignored_any","","",35,null],[11,"deserialize_bytes","","",35,null],[11,"deserialize_unit_struct","","",35,null],[11,"deserialize_unit","","",35,null],[11,"deserialize_seq","","",35,null],[11,"deserialize_seq_fixed_size","","",35,null],[11,"deserialize_map","","",35,null],[11,"deserialize_newtype_struct","","",35,null],[11,"deserialize_struct_field","","",35,null],[11,"deserialize_tuple","","",35,null],[11,"deserialize_enum","","",35,null],[11,"deserialize_struct","","",35,null],[11,"deserialize_tuple_struct","","",35,null],[11,"deserialize_option","","",35,null],[11,"deserialize","","",35,null],[11,"deserialize_bool","","",36,null],[11,"deserialize_f64","","",36,null],[11,"deserialize_f32","","",36,null],[11,"deserialize_u8","","",36,null],[11,"deserialize_u16","","",36,null],[11,"deserialize_u32","","",36,null],[11,"deserialize_u64","","",36,null],[11,"deserialize_usize","","",36,null],[11,"deserialize_i8","","",36,null],[11,"deserialize_i16","","",36,null],[11,"deserialize_i32","","",36,null],[11,"deserialize_i64","","",36,null],[11,"deserialize_isize","","",36,null],[11,"deserialize_char","","",36,null],[11,"deserialize_str","","",36,null],[11,"deserialize_string","","",36,null],[11,"deserialize_ignored_any","","",36,null],[11,"deserialize_bytes","","",36,null],[11,"deserialize_unit_struct","","",36,null],[11,"deserialize_unit","","",36,null],[11,"deserialize_seq","","",36,null],[11,"deserialize_seq_fixed_size","","",36,null],[11,"deserialize_map","","",36,null],[11,"deserialize_newtype_struct","","",36,null],[11,"deserialize_struct_field","","",36,null],[11,"deserialize_tuple","","",36,null],[11,"deserialize_enum","","",36,null],[11,"deserialize_struct","","",36,null],[11,"deserialize_tuple_struct","","",36,null],[11,"deserialize_option","","",36,null],[11,"deserialize","","",36,null],[11,"deserialize_bool","","",37,null],[11,"deserialize_f64","","",37,null],[11,"deserialize_f32","","",37,null],[11,"deserialize_u8","","",37,null],[11,"deserialize_u16","","",37,null],[11,"deserialize_u32","","",37,null],[11,"deserialize_u64","","",37,null],[11,"deserialize_usize","","",37,null],[11,"deserialize_i8","","",37,null],[11,"deserialize_i16","","",37,null],[11,"deserialize_i32","","",37,null],[11,"deserialize_i64","","",37,null],[11,"deserialize_isize","","",37,null],[11,"deserialize_char","","",37,null],[11,"deserialize_str","","",37,null],[11,"deserialize_string","","",37,null],[11,"deserialize_ignored_any","","",37,null],[11,"deserialize_bytes","","",37,null],[11,"deserialize_unit_struct","","",37,null],[11,"deserialize_unit","","",37,null],[11,"deserialize_seq","","",37,null],[11,"deserialize_seq_fixed_size","","",37,null],[11,"deserialize_map","","",37,null],[11,"deserialize_newtype_struct","","",37,null],[11,"deserialize_struct_field","","",37,null],[11,"deserialize_tuple","","",37,null],[11,"deserialize_enum","","",37,null],[11,"deserialize_struct","","",37,null],[11,"deserialize_tuple_struct","","",37,null],[11,"deserialize_option","","",37,null],[11,"deserialize","","",37,null],[11,"deserialize_bool","","",38,null],[11,"deserialize_f64","","",38,null],[11,"deserialize_f32","","",38,null],[11,"deserialize_u8","","",38,null],[11,"deserialize_u16","","",38,null],[11,"deserialize_u32","","",38,null],[11,"deserialize_u64","","",38,null],[11,"deserialize_usize","","",38,null],[11,"deserialize_i8","","",38,null],[11,"deserialize_i16","","",38,null],[11,"deserialize_i32","","",38,null],[11,"deserialize_i64","","",38,null],[11,"deserialize_isize","","",38,null],[11,"deserialize_char","","",38,null],[11,"deserialize_str","","",38,null],[11,"deserialize_string","","",38,null],[11,"deserialize_ignored_any","","",38,null],[11,"deserialize_bytes","","",38,null],[11,"deserialize_unit_struct","","",38,null],[11,"deserialize_unit","","",38,null],[11,"deserialize_seq","","",38,null],[11,"deserialize_seq_fixed_size","","",38,null],[11,"deserialize_map","","",38,null],[11,"deserialize_newtype_struct","","",38,null],[11,"deserialize_struct_field","","",38,null],[11,"deserialize_tuple","","",38,null],[11,"deserialize_enum","","",38,null],[11,"deserialize_struct","","",38,null],[11,"deserialize_tuple_struct","","",38,null],[11,"deserialize_option","","",38,null],[11,"deserialize","","",38,null],[11,"deserialize_bool","","",39,null],[11,"deserialize_f64","","",39,null],[11,"deserialize_f32","","",39,null],[11,"deserialize_u8","","",39,null],[11,"deserialize_u16","","",39,null],[11,"deserialize_u32","","",39,null],[11,"deserialize_u64","","",39,null],[11,"deserialize_usize","","",39,null],[11,"deserialize_i8","","",39,null],[11,"deserialize_i16","","",39,null],[11,"deserialize_i32","","",39,null],[11,"deserialize_i64","","",39,null],[11,"deserialize_isize","","",39,null],[11,"deserialize_char","","",39,null],[11,"deserialize_str","","",39,null],[11,"deserialize_string","","",39,null],[11,"deserialize_ignored_any","","",39,null],[11,"deserialize_bytes","","",39,null],[11,"deserialize_unit_struct","","",39,null],[11,"deserialize_unit","","",39,null],[11,"deserialize_seq","","",39,null],[11,"deserialize_seq_fixed_size","","",39,null],[11,"deserialize_map","","",39,null],[11,"deserialize_newtype_struct","","",39,null],[11,"deserialize_struct_field","","",39,null],[11,"deserialize_tuple","","",39,null],[11,"deserialize_enum","","",39,null],[11,"deserialize_struct","","",39,null],[11,"deserialize_tuple_struct","","",39,null],[11,"deserialize_option","","",39,null],[11,"deserialize","","",39,null],[11,"deserialize_bool","","",40,null],[11,"deserialize_f64","","",40,null],[11,"deserialize_f32","","",40,null],[11,"deserialize_u8","","",40,null],[11,"deserialize_u16","","",40,null],[11,"deserialize_u32","","",40,null],[11,"deserialize_u64","","",40,null],[11,"deserialize_usize","","",40,null],[11,"deserialize_i8","","",40,null],[11,"deserialize_i16","","",40,null],[11,"deserialize_i32","","",40,null],[11,"deserialize_i64","","",40,null],[11,"deserialize_isize","","",40,null],[11,"deserialize_char","","",40,null],[11,"deserialize_str","","",40,null],[11,"deserialize_string","","",40,null],[11,"deserialize_ignored_any","","",40,null],[11,"deserialize_bytes","","",40,null],[11,"deserialize_unit_struct","","",40,null],[11,"deserialize_unit","","",40,null],[11,"deserialize_seq","","",40,null],[11,"deserialize_seq_fixed_size","","",40,null],[11,"deserialize_map","","",40,null],[11,"deserialize_newtype_struct","","",40,null],[11,"deserialize_struct_field","","",40,null],[11,"deserialize_tuple","","",40,null],[11,"deserialize_enum","","",40,null],[11,"deserialize_struct","","",40,null],[11,"deserialize_tuple_struct","","",40,null],[11,"deserialize_option","","",40,null],[11,"deserialize","","",40,null],[11,"deserialize_bool","","",41,null],[11,"deserialize_f64","","",41,null],[11,"deserialize_f32","","",41,null],[11,"deserialize_u8","","",41,null],[11,"deserialize_u16","","",41,null],[11,"deserialize_u32","","",41,null],[11,"deserialize_u64","","",41,null],[11,"deserialize_usize","","",41,null],[11,"deserialize_i8","","",41,null],[11,"deserialize_i16","","",41,null],[11,"deserialize_i32","","",41,null],[11,"deserialize_i64","","",41,null],[11,"deserialize_isize","","",41,null],[11,"deserialize_char","","",41,null],[11,"deserialize_str","","",41,null],[11,"deserialize_string","","",41,null],[11,"deserialize_ignored_any","","",41,null],[11,"deserialize_bytes","","",41,null],[11,"deserialize_unit_struct","","",41,null],[11,"deserialize_unit","","",41,null],[11,"deserialize_seq","","",41,null],[11,"deserialize_seq_fixed_size","","",41,null],[11,"deserialize_map","","",41,null],[11,"deserialize_newtype_struct","","",41,null],[11,"deserialize_struct_field","","",41,null],[11,"deserialize_tuple","","",41,null],[11,"deserialize_enum","","",41,null],[11,"deserialize_struct","","",41,null],[11,"deserialize_tuple_struct","","",41,null],[11,"deserialize_option","","",41,null],[11,"deserialize","","",41,null],[11,"deserialize_bool","","",42,null],[11,"deserialize_f64","","",42,null],[11,"deserialize_f32","","",42,null],[11,"deserialize_u8","","",42,null],[11,"deserialize_u16","","",42,null],[11,"deserialize_u32","","",42,null],[11,"deserialize_u64","","",42,null],[11,"deserialize_usize","","",42,null],[11,"deserialize_i8","","",42,null],[11,"deserialize_i16","","",42,null],[11,"deserialize_i32","","",42,null],[11,"deserialize_i64","","",42,null],[11,"deserialize_isize","","",42,null],[11,"deserialize_char","","",42,null],[11,"deserialize_str","","",42,null],[11,"deserialize_string","","",42,null],[11,"deserialize_ignored_any","","",42,null],[11,"deserialize_bytes","","",42,null],[11,"deserialize_unit_struct","","",42,null],[11,"deserialize_unit","","",42,null],[11,"deserialize_seq","","",42,null],[11,"deserialize_seq_fixed_size","","",42,null],[11,"deserialize_map","","",42,null],[11,"deserialize_newtype_struct","","",42,null],[11,"deserialize_struct_field","","",42,null],[11,"deserialize_tuple","","",42,null],[11,"deserialize_enum","","",42,null],[11,"deserialize_struct","","",42,null],[11,"deserialize_tuple_struct","","",42,null],[11,"deserialize_option","","",42,null],[11,"deserialize","","",42,null],[11,"deserialize_bool","","",43,null],[11,"deserialize_f64","","",43,null],[11,"deserialize_f32","","",43,null],[11,"deserialize_u8","","",43,null],[11,"deserialize_u16","","",43,null],[11,"deserialize_u32","","",43,null],[11,"deserialize_u64","","",43,null],[11,"deserialize_usize","","",43,null],[11,"deserialize_i8","","",43,null],[11,"deserialize_i16","","",43,null],[11,"deserialize_i32","","",43,null],[11,"deserialize_i64","","",43,null],[11,"deserialize_isize","","",43,null],[11,"deserialize_char","","",43,null],[11,"deserialize_str","","",43,null],[11,"deserialize_string","","",43,null],[11,"deserialize_ignored_any","","",43,null],[11,"deserialize_bytes","","",43,null],[11,"deserialize_unit_struct","","",43,null],[11,"deserialize_unit","","",43,null],[11,"deserialize_seq","","",43,null],[11,"deserialize_seq_fixed_size","","",43,null],[11,"deserialize_map","","",43,null],[11,"deserialize_newtype_struct","","",43,null],[11,"deserialize_struct_field","","",43,null],[11,"deserialize_tuple","","",43,null],[11,"deserialize_enum","","",43,null],[11,"deserialize_struct","","",43,null],[11,"deserialize_tuple_struct","","",43,null],[11,"deserialize_option","","",43,null],[11,"deserialize","","",43,null],[11,"deserialize_bool","","",44,null],[11,"deserialize_f64","","",44,null],[11,"deserialize_f32","","",44,null],[11,"deserialize_u8","","",44,null],[11,"deserialize_u16","","",44,null],[11,"deserialize_u32","","",44,null],[11,"deserialize_u64","","",44,null],[11,"deserialize_usize","","",44,null],[11,"deserialize_i8","","",44,null],[11,"deserialize_i16","","",44,null],[11,"deserialize_i32","","",44,null],[11,"deserialize_i64","","",44,null],[11,"deserialize_isize","","",44,null],[11,"deserialize_char","","",44,null],[11,"deserialize_str","","",44,null],[11,"deserialize_string","","",44,null],[11,"deserialize_ignored_any","","",44,null],[11,"deserialize_bytes","","",44,null],[11,"deserialize_unit_struct","","",44,null],[11,"deserialize_unit","","",44,null],[11,"deserialize_seq","","",44,null],[11,"deserialize_seq_fixed_size","","",44,null],[11,"deserialize_map","","",44,null],[11,"deserialize_newtype_struct","","",44,null],[11,"deserialize_struct_field","","",44,null],[11,"deserialize_tuple","","",44,null],[11,"deserialize_enum","","",44,null],[11,"deserialize_struct","","",44,null],[11,"deserialize_tuple_struct","","",44,null],[11,"deserialize_option","","",44,null],[11,"deserialize","","",44,null],[11,"deserialize_bool","","",45,null],[11,"deserialize_f64","","",45,null],[11,"deserialize_f32","","",45,null],[11,"deserialize_u8","","",45,null],[11,"deserialize_u16","","",45,null],[11,"deserialize_u32","","",45,null],[11,"deserialize_u64","","",45,null],[11,"deserialize_usize","","",45,null],[11,"deserialize_i8","","",45,null],[11,"deserialize_i16","","",45,null],[11,"deserialize_i32","","",45,null],[11,"deserialize_i64","","",45,null],[11,"deserialize_isize","","",45,null],[11,"deserialize_char","","",45,null],[11,"deserialize_str","","",45,null],[11,"deserialize_string","","",45,null],[11,"deserialize_ignored_any","","",45,null],[11,"deserialize_bytes","","",45,null],[11,"deserialize_unit_struct","","",45,null],[11,"deserialize_unit","","",45,null],[11,"deserialize_seq","","",45,null],[11,"deserialize_seq_fixed_size","","",45,null],[11,"deserialize_map","","",45,null],[11,"deserialize_newtype_struct","","",45,null],[11,"deserialize_struct_field","","",45,null],[11,"deserialize_tuple","","",45,null],[11,"deserialize_enum","","",45,null],[11,"deserialize_struct","","",45,null],[11,"deserialize_tuple_struct","","",45,null],[11,"deserialize_option","","",45,null],[11,"deserialize","","",45,null],[11,"deserialize_bool","","",46,null],[11,"deserialize_f64","","",46,null],[11,"deserialize_f32","","",46,null],[11,"deserialize_u8","","",46,null],[11,"deserialize_u16","","",46,null],[11,"deserialize_u32","","",46,null],[11,"deserialize_u64","","",46,null],[11,"deserialize_usize","","",46,null],[11,"deserialize_i8","","",46,null],[11,"deserialize_i16","","",46,null],[11,"deserialize_i32","","",46,null],[11,"deserialize_i64","","",46,null],[11,"deserialize_isize","","",46,null],[11,"deserialize_char","","",46,null],[11,"deserialize_str","","",46,null],[11,"deserialize_string","","",46,null],[11,"deserialize_ignored_any","","",46,null],[11,"deserialize_bytes","","",46,null],[11,"deserialize_unit_struct","","",46,null],[11,"deserialize_unit","","",46,null],[11,"deserialize_seq","","",46,null],[11,"deserialize_seq_fixed_size","","",46,null],[11,"deserialize_map","","",46,null],[11,"deserialize_newtype_struct","","",46,null],[11,"deserialize_struct_field","","",46,null],[11,"deserialize_tuple","","",46,null],[11,"deserialize_enum","","",46,null],[11,"deserialize_struct","","",46,null],[11,"deserialize_tuple_struct","","",46,null],[11,"deserialize_option","","",46,null],[11,"deserialize","","",46,null],[11,"deserialize_bool","","",47,null],[11,"deserialize_f64","","",47,null],[11,"deserialize_f32","","",47,null],[11,"deserialize_u8","","",47,null],[11,"deserialize_u16","","",47,null],[11,"deserialize_u32","","",47,null],[11,"deserialize_u64","","",47,null],[11,"deserialize_usize","","",47,null],[11,"deserialize_i8","","",47,null],[11,"deserialize_i16","","",47,null],[11,"deserialize_i32","","",47,null],[11,"deserialize_i64","","",47,null],[11,"deserialize_isize","","",47,null],[11,"deserialize_char","","",47,null],[11,"deserialize_str","","",47,null],[11,"deserialize_string","","",47,null],[11,"deserialize_ignored_any","","",47,null],[11,"deserialize_bytes","","",47,null],[11,"deserialize_unit_struct","","",47,null],[11,"deserialize_unit","","",47,null],[11,"deserialize_seq","","",47,null],[11,"deserialize_seq_fixed_size","","",47,null],[11,"deserialize_map","","",47,null],[11,"deserialize_newtype_struct","","",47,null],[11,"deserialize_struct_field","","",47,null],[11,"deserialize_tuple","","",47,null],[11,"deserialize_enum","","",47,null],[11,"deserialize_struct","","",47,null],[11,"deserialize_tuple_struct","","",47,null],[11,"deserialize_option","","",47,null],[11,"deserialize","","",47,null],[11,"deserialize_bool","","",48,null],[11,"deserialize_f64","","",48,null],[11,"deserialize_f32","","",48,null],[11,"deserialize_u8","","",48,null],[11,"deserialize_u16","","",48,null],[11,"deserialize_u32","","",48,null],[11,"deserialize_u64","","",48,null],[11,"deserialize_usize","","",48,null],[11,"deserialize_i8","","",48,null],[11,"deserialize_i16","","",48,null],[11,"deserialize_i32","","",48,null],[11,"deserialize_i64","","",48,null],[11,"deserialize_isize","","",48,null],[11,"deserialize_char","","",48,null],[11,"deserialize_str","","",48,null],[11,"deserialize_string","","",48,null],[11,"deserialize_ignored_any","","",48,null],[11,"deserialize_bytes","","",48,null],[11,"deserialize_unit_struct","","",48,null],[11,"deserialize_unit","","",48,null],[11,"deserialize_seq","","",48,null],[11,"deserialize_seq_fixed_size","","",48,null],[11,"deserialize_map","","",48,null],[11,"deserialize_newtype_struct","","",48,null],[11,"deserialize_struct_field","","",48,null],[11,"deserialize_tuple","","",48,null],[11,"deserialize_enum","","",48,null],[11,"deserialize_struct","","",48,null],[11,"deserialize_tuple_struct","","",48,null],[11,"deserialize_option","","",48,null],[11,"deserialize","","",48,null],[11,"deserialize","","",49,null],[11,"deserialize_enum","","",49,null],[11,"deserialize_bool","","",49,null],[11,"deserialize_f64","","",49,null],[11,"deserialize_f32","","",49,null],[11,"deserialize_u8","","",49,null],[11,"deserialize_u16","","",49,null],[11,"deserialize_u32","","",49,null],[11,"deserialize_u64","","",49,null],[11,"deserialize_usize","","",49,null],[11,"deserialize_i8","","",49,null],[11,"deserialize_i16","","",49,null],[11,"deserialize_i32","","",49,null],[11,"deserialize_i64","","",49,null],[11,"deserialize_isize","","",49,null],[11,"deserialize_char","","",49,null],[11,"deserialize_str","","",49,null],[11,"deserialize_string","","",49,null],[11,"deserialize_ignored_any","","",49,null],[11,"deserialize_bytes","","",49,null],[11,"deserialize_unit_struct","","",49,null],[11,"deserialize_unit","","",49,null],[11,"deserialize_seq","","",49,null],[11,"deserialize_seq_fixed_size","","",49,null],[11,"deserialize_map","","",49,null],[11,"deserialize_newtype_struct","","",49,null],[11,"deserialize_struct_field","","",49,null],[11,"deserialize_tuple","","",49,null],[11,"deserialize_struct","","",49,null],[11,"deserialize_tuple_struct","","",49,null],[11,"deserialize_option","","",49,null],[11,"visit_variant","","",49,null],[11,"visit_unit","","",49,null],[11,"visit_newtype","","",49,null],[11,"visit_tuple","","",49,null],[11,"visit_struct","","",49,null],[11,"deserialize","","",50,null],[11,"deserialize_enum","","",50,null],[11,"deserialize_bool","","",50,null],[11,"deserialize_f64","","",50,null],[11,"deserialize_f32","","",50,null],[11,"deserialize_u8","","",50,null],[11,"deserialize_u16","","",50,null],[11,"deserialize_u32","","",50,null],[11,"deserialize_u64","","",50,null],[11,"deserialize_usize","","",50,null],[11,"deserialize_i8","","",50,null],[11,"deserialize_i16","","",50,null],[11,"deserialize_i32","","",50,null],[11,"deserialize_i64","","",50,null],[11,"deserialize_isize","","",50,null],[11,"deserialize_char","","",50,null],[11,"deserialize_str","","",50,null],[11,"deserialize_string","","",50,null],[11,"deserialize_ignored_any","","",50,null],[11,"deserialize_bytes","","",50,null],[11,"deserialize_unit_struct","","",50,null],[11,"deserialize_unit","","",50,null],[11,"deserialize_seq","","",50,null],[11,"deserialize_seq_fixed_size","","",50,null],[11,"deserialize_map","","",50,null],[11,"deserialize_newtype_struct","","",50,null],[11,"deserialize_struct_field","","",50,null],[11,"deserialize_tuple","","",50,null],[11,"deserialize_struct","","",50,null],[11,"deserialize_tuple_struct","","",50,null],[11,"deserialize_option","","",50,null],[11,"visit_variant","","",50,null],[11,"visit_unit","","",50,null],[11,"visit_newtype","","",50,null],[11,"visit_tuple","","",50,null],[11,"visit_struct","","",50,null],[11,"new","","Construct a new `SeqDeserializer&lt;I&gt;`.",51,{"inputs":[{"name":"i"},{"name":"usize"}],"output":{"name":"self"}}],[11,"deserialize","","",51,null],[11,"deserialize_bool","","",51,null],[11,"deserialize_f64","","",51,null],[11,"deserialize_f32","","",51,null],[11,"deserialize_u8","","",51,null],[11,"deserialize_u16","","",51,null],[11,"deserialize_u32","","",51,null],[11,"deserialize_u64","","",51,null],[11,"deserialize_usize","","",51,null],[11,"deserialize_i8","","",51,null],[11,"deserialize_i16","","",51,null],[11,"deserialize_i32","","",51,null],[11,"deserialize_i64","","",51,null],[11,"deserialize_isize","","",51,null],[11,"deserialize_char","","",51,null],[11,"deserialize_str","","",51,null],[11,"deserialize_string","","",51,null],[11,"deserialize_ignored_any","","",51,null],[11,"deserialize_bytes","","",51,null],[11,"deserialize_unit_struct","","",51,null],[11,"deserialize_unit","","",51,null],[11,"deserialize_seq","","",51,null],[11,"deserialize_seq_fixed_size","","",51,null],[11,"deserialize_map","","",51,null],[11,"deserialize_newtype_struct","","",51,null],[11,"deserialize_struct_field","","",51,null],[11,"deserialize_tuple","","",51,null],[11,"deserialize_enum","","",51,null],[11,"deserialize_struct","","",51,null],[11,"deserialize_tuple_struct","","",51,null],[11,"deserialize_option","","",51,null],[11,"visit","","",51,null],[11,"end","","",51,null],[11,"size_hint","","",51,null],[11,"new","","Construct a new `SeqVisitorDeserializer&lt;V_, E&gt;`.",52,{"inputs":[{"name":"v_"}],"output":{"name":"self"}}],[11,"deserialize","","",52,null],[11,"deserialize_bool","","",52,null],[11,"deserialize_f64","","",52,null],[11,"deserialize_f32","","",52,null],[11,"deserialize_u8","","",52,null],[11,"deserialize_u16","","",52,null],[11,"deserialize_u32","","",52,null],[11,"deserialize_u64","","",52,null],[11,"deserialize_usize","","",52,null],[11,"deserialize_i8","","",52,null],[11,"deserialize_i16","","",52,null],[11,"deserialize_i32","","",52,null],[11,"deserialize_i64","","",52,null],[11,"deserialize_isize","","",52,null],[11,"deserialize_char","","",52,null],[11,"deserialize_str","","",52,null],[11,"deserialize_string","","",52,null],[11,"deserialize_ignored_any","","",52,null],[11,"deserialize_bytes","","",52,null],[11,"deserialize_unit_struct","","",52,null],[11,"deserialize_unit","","",52,null],[11,"deserialize_seq","","",52,null],[11,"deserialize_seq_fixed_size","","",52,null],[11,"deserialize_map","","",52,null],[11,"deserialize_newtype_struct","","",52,null],[11,"deserialize_struct_field","","",52,null],[11,"deserialize_tuple","","",52,null],[11,"deserialize_enum","","",52,null],[11,"deserialize_struct","","",52,null],[11,"deserialize_tuple_struct","","",52,null],[11,"deserialize_option","","",52,null],[11,"new","","Construct a new `MapDeserializer&lt;I, K, V&gt;`.",53,{"inputs":[{"name":"i"},{"name":"usize"}],"output":{"name":"self"}}],[11,"deserialize","","",53,null],[11,"deserialize_bool","","",53,null],[11,"deserialize_f64","","",53,null],[11,"deserialize_f32","","",53,null],[11,"deserialize_u8","","",53,null],[11,"deserialize_u16","","",53,null],[11,"deserialize_u32","","",53,null],[11,"deserialize_u64","","",53,null],[11,"deserialize_usize","","",53,null],[11,"deserialize_i8","","",53,null],[11,"deserialize_i16","","",53,null],[11,"deserialize_i32","","",53,null],[11,"deserialize_i64","","",53,null],[11,"deserialize_isize","","",53,null],[11,"deserialize_char","","",53,null],[11,"deserialize_str","","",53,null],[11,"deserialize_string","","",53,null],[11,"deserialize_ignored_any","","",53,null],[11,"deserialize_bytes","","",53,null],[11,"deserialize_unit_struct","","",53,null],[11,"deserialize_unit","","",53,null],[11,"deserialize_seq","","",53,null],[11,"deserialize_seq_fixed_size","","",53,null],[11,"deserialize_map","","",53,null],[11,"deserialize_newtype_struct","","",53,null],[11,"deserialize_struct_field","","",53,null],[11,"deserialize_tuple","","",53,null],[11,"deserialize_enum","","",53,null],[11,"deserialize_struct","","",53,null],[11,"deserialize_tuple_struct","","",53,null],[11,"deserialize_option","","",53,null],[11,"visit_key","","",53,null],[11,"visit_value","","",53,null],[11,"end","","",53,null],[11,"size_hint","","",53,null],[11,"new","","Construct a new `MapVisitorDeserializer&lt;V_, E&gt;`.",54,{"inputs":[{"name":"v_"}],"output":{"name":"self"}}],[11,"deserialize","","",54,null],[11,"deserialize_bool","","",54,null],[11,"deserialize_f64","","",54,null],[11,"deserialize_f32","","",54,null],[11,"deserialize_u8","","",54,null],[11,"deserialize_u16","","",54,null],[11,"deserialize_u32","","",54,null],[11,"deserialize_u64","","",54,null],[11,"deserialize_usize","","",54,null],[11,"deserialize_i8","","",54,null],[11,"deserialize_i16","","",54,null],[11,"deserialize_i32","","",54,null],[11,"deserialize_i64","","",54,null],[11,"deserialize_isize","","",54,null],[11,"deserialize_char","","",54,null],[11,"deserialize_str","","",54,null],[11,"deserialize_string","","",54,null],[11,"deserialize_ignored_any","","",54,null],[11,"deserialize_bytes","","",54,null],[11,"deserialize_unit_struct","","",54,null],[11,"deserialize_unit","","",54,null],[11,"deserialize_seq","","",54,null],[11,"deserialize_seq_fixed_size","","",54,null],[11,"deserialize_map","","",54,null],[11,"deserialize_newtype_struct","","",54,null],[11,"deserialize_struct_field","","",54,null],[11,"deserialize_tuple","","",54,null],[11,"deserialize_enum","","",54,null],[11,"deserialize_struct","","",54,null],[11,"deserialize_tuple_struct","","",54,null],[11,"deserialize_option","","",54,null],[11,"into_deserializer","serde::bytes","",2,null],[11,"deserialize","serde::de::value","",55,null],[11,"deserialize_bool","","",55,null],[11,"deserialize_f64","","",55,null],[11,"deserialize_f32","","",55,null],[11,"deserialize_u8","","",55,null],[11,"deserialize_u16","","",55,null],[11,"deserialize_u32","","",55,null],[11,"deserialize_u64","","",55,null],[11,"deserialize_usize","","",55,null],[11,"deserialize_i8","","",55,null],[11,"deserialize_i16","","",55,null],[11,"deserialize_i32","","",55,null],[11,"deserialize_i64","","",55,null],[11,"deserialize_isize","","",55,null],[11,"deserialize_char","","",55,null],[11,"deserialize_str","","",55,null],[11,"deserialize_string","","",55,null],[11,"deserialize_ignored_any","","",55,null],[11,"deserialize_bytes","","",55,null],[11,"deserialize_unit_struct","","",55,null],[11,"deserialize_unit","","",55,null],[11,"deserialize_seq","","",55,null],[11,"deserialize_seq_fixed_size","","",55,null],[11,"deserialize_map","","",55,null],[11,"deserialize_newtype_struct","","",55,null],[11,"deserialize_struct_field","","",55,null],[11,"deserialize_tuple","","",55,null],[11,"deserialize_enum","","",55,null],[11,"deserialize_struct","","",55,null],[11,"deserialize_tuple_struct","","",55,null],[11,"deserialize_option","","",55,null],[11,"into_deserializer","serde::bytes","",0,null],[11,"deserialize","serde::de::value","",56,null],[11,"deserialize_bool","","",56,null],[11,"deserialize_f64","","",56,null],[11,"deserialize_f32","","",56,null],[11,"deserialize_u8","","",56,null],[11,"deserialize_u16","","",56,null],[11,"deserialize_u32","","",56,null],[11,"deserialize_u64","","",56,null],[11,"deserialize_usize","","",56,null],[11,"deserialize_i8","","",56,null],[11,"deserialize_i16","","",56,null],[11,"deserialize_i32","","",56,null],[11,"deserialize_i64","","",56,null],[11,"deserialize_isize","","",56,null],[11,"deserialize_char","","",56,null],[11,"deserialize_str","","",56,null],[11,"deserialize_string","","",56,null],[11,"deserialize_ignored_any","","",56,null],[11,"deserialize_bytes","","",56,null],[11,"deserialize_unit_struct","","",56,null],[11,"deserialize_unit","","",56,null],[11,"deserialize_seq","","",56,null],[11,"deserialize_seq_fixed_size","","",56,null],[11,"deserialize_map","","",56,null],[11,"deserialize_newtype_struct","","",56,null],[11,"deserialize_struct_field","","",56,null],[11,"deserialize_tuple","","",56,null],[11,"deserialize_enum","","",56,null],[11,"deserialize_struct","","",56,null],[11,"deserialize_tuple_struct","","",56,null],[11,"deserialize_option","","",56,null],[8,"Error","serde::de","`Error` is a trait that allows a `Deserialize` to generically create a\n`Deserializer` error.",null,null],[10,"custom","","Raised when there is general error when deserializing a type.",57,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[10,"end_of_stream","","Raised when a `Deserialize` type unexpectedly hit the end of the stream.",57,{"inputs":[],"output":{"name":"self"}}],[11,"invalid_type","","Raised when a `Deserialize` was passed an incorrect type.",57,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"invalid_value","","Raised when a `Deserialize` was passed an incorrect value.",57,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"invalid_length","","Raised when a fixed sized sequence or map was passed in the wrong amount of arguments.",57,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"unknown_variant","","Raised when a `Deserialize` enum type received an unexpected variant.",57,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"unknown_field","","Raised when a `Deserialize` struct type received an unexpected struct field.",57,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"missing_field","","raised when a `deserialize` struct type did not receive a field.",57,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than one of the\nsame struct field.",57,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[8,"Deserialize","","`Deserialize` represents a type that can be deserialized.",null,null],[10,"deserialize","","Deserialize this value given this `Deserializer`.",58,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Deserializer","","`Deserializer` is a trait that can deserialize values by threading a `Visitor` trait through a\nvalue. It supports two entry point styles which enables different kinds of deserialization.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",59,null],[10,"deserialize","","This method walks a visitor through a value as it is being deserialized.",59,null],[10,"deserialize_bool","","This method hints that the `Deserialize` type is expecting a `bool` value.",59,null],[10,"deserialize_usize","","This method hints that the `Deserialize` type is expecting an `usize` value.\nA reasonable default is to forward to `deserialize_u64`.",59,null],[10,"deserialize_u8","","This method hints that the `Deserialize` type is expecting an `u8` value.\nA reasonable default is to forward to `deserialize_u64`.",59,null],[10,"deserialize_u16","","This method hints that the `Deserialize` type is expecting an `u16` value.\nA reasonable default is to forward to `deserialize_u64`.",59,null],[10,"deserialize_u32","","This method hints that the `Deserialize` type is expecting an `u32` value.\nA reasonable default is to forward to `deserialize_u64`.",59,null],[10,"deserialize_u64","","This method hints that the `Deserialize` type is expecting an `u64` value.",59,null],[10,"deserialize_isize","","This method hints that the `Deserialize` type is expecting an `isize` value.\nA reasonable default is to forward to `deserialize_i64`.",59,null],[10,"deserialize_i8","","This method hints that the `Deserialize` type is expecting an `i8` value.\nA reasonable default is to forward to `deserialize_i64`.",59,null],[10,"deserialize_i16","","This method hints that the `Deserialize` type is expecting an `i16` value.\nA reasonable default is to forward to `deserialize_i64`.",59,null],[10,"deserialize_i32","","This method hints that the `Deserialize` type is expecting an `i32` value.\nA reasonable default is to forward to `deserialize_i64`.",59,null],[10,"deserialize_i64","","This method hints that the `Deserialize` type is expecting an `i64` value.",59,null],[10,"deserialize_f32","","This method hints that the `Deserialize` type is expecting a `f32` value.\nA reasonable default is to forward to `deserialize_f64`.",59,null],[10,"deserialize_f64","","This method hints that the `Deserialize` type is expecting a `f64` value.",59,null],[10,"deserialize_char","","This method hints that the `Deserialize` type is expecting a `char` value.",59,null],[10,"deserialize_str","","This method hints that the `Deserialize` type is expecting a `&amp;str` value.",59,null],[10,"deserialize_string","","This method hints that the `Deserialize` type is expecting a `String` value.",59,null],[10,"deserialize_unit","","This method hints that the `Deserialize` type is expecting an `unit` value.",59,null],[10,"deserialize_option","","This method hints that the `Deserialize` type is expecting an `Option` value. This allows\ndeserializers that encode an optional value as a nullable value to convert the null value\ninto a `None`, and a regular value as `Some(value)`.",59,null],[10,"deserialize_seq","","This method hints that the `Deserialize` type is expecting a sequence value. This allows\ndeserializers to parse sequences that aren&#39;t tagged as sequences.",59,null],[10,"deserialize_seq_fixed_size","","This method hints that the `Deserialize` type is expecting a fixed size array. This allows\ndeserializers to parse arrays that aren&#39;t tagged as arrays.",59,null],[10,"deserialize_bytes","","This method hints that the `Deserialize` type is expecting a `Vec&lt;u8&gt;`. This allows\ndeserializers that provide a custom byte vector serialization to properly deserialize the\ntype.",59,null],[10,"deserialize_map","","This method hints that the `Deserialize` type is expecting a map of values. This allows\ndeserializers to parse sequences that aren&#39;t tagged as maps.",59,null],[10,"deserialize_unit_struct","","This method hints that the `Deserialize` type is expecting a unit struct. This allows\ndeserializers to a unit struct that aren&#39;t tagged as a unit struct.",59,null],[10,"deserialize_newtype_struct","","This method hints that the `Deserialize` type is expecting a newtype struct. This allows\ndeserializers to a newtype struct that aren&#39;t tagged as a newtype struct.\nA reasonable default is to simply deserialize the expected value directly.",59,null],[10,"deserialize_tuple_struct","","This method hints that the `Deserialize` type is expecting a tuple struct. This allows\ndeserializers to parse sequences that aren&#39;t tagged as sequences.",59,null],[10,"deserialize_struct","","This method hints that the `Deserialize` type is expecting a struct. This allows\ndeserializers to parse sequences that aren&#39;t tagged as maps.",59,null],[10,"deserialize_struct_field","","This method hints that the `Deserialize` type is expecting some sort of struct field\nname.  This allows deserializers to choose between &amp;str, usize, or &amp;[u8] to properly\ndeserialize a struct field.",59,null],[10,"deserialize_tuple","","This method hints that the `Deserialize` type is expecting a tuple value. This allows\ndeserializers that provide a custom tuple serialization to properly deserialize the type.",59,null],[10,"deserialize_enum","","This method hints that the `Deserialize` type is expecting an enum value. This allows\ndeserializers that provide a custom enumeration serialization to properly deserialize the\ntype.",59,null],[10,"deserialize_ignored_any","","This method hints that the `Deserialize` type needs to deserialize a value whose type\ndoesn&#39;t matter because it is ignored.",59,null],[8,"Visitor","","This trait represents a visitor that walks through a deserializer.",null,null],[16,"Value","","The value produced by this visitor.",60,null],[11,"visit_bool","","`visit_bool` deserializes a `bool` into a `Value`.",60,null],[11,"visit_isize","","`visit_isize` deserializes a `isize` into a `Value`.",60,null],[11,"visit_i8","","`visit_i8` deserializes a `i8` into a `Value`.",60,null],[11,"visit_i16","","`visit_i16` deserializes a `i16` into a `Value`.",60,null],[11,"visit_i32","","`visit_i32` deserializes a `i32` into a `Value`.",60,null],[11,"visit_i64","","`visit_i64` deserializes a `i64` into a `Value`.",60,null],[11,"visit_usize","","`visit_usize` deserializes a `usize` into a `Value`.",60,null],[11,"visit_u8","","`visit_u8` deserializes a `u8` into a `Value`.",60,null],[11,"visit_u16","","`visit_u16` deserializes a `u16` into a `Value`.",60,null],[11,"visit_u32","","`visit_u32` deserializes a `u32` into a `Value`.",60,null],[11,"visit_u64","","`visit_u64` deserializes a `u64` into a `Value`.",60,null],[11,"visit_f32","","`visit_f32` deserializes a `f32` into a `Value`.",60,null],[11,"visit_f64","","`visit_f64` deserializes a `f64` into a `Value`.",60,null],[11,"visit_char","","`visit_char` deserializes a `char` into a `Value`.",60,null],[11,"visit_str","","`visit_str` deserializes a `&amp;str` into a `Value`.",60,null],[11,"visit_string","","`visit_string` deserializes a `String` into a `Value`.  This allows a deserializer to avoid\na copy if it is deserializing a string from a `String` type.  By default it passes a `&amp;str`\nto the `visit_str` method.",60,null],[11,"visit_unit","","`visit_unit` deserializes a `()` into a `Value`.",60,null],[11,"visit_unit_struct","","`visit_unit_struct` deserializes a unit struct into a `Value`.",60,null],[11,"visit_none","","`visit_none` deserializes a none value into a `Value`.",60,null],[11,"visit_some","","`visit_some` deserializes a value into a `Value`.",60,null],[11,"visit_newtype_struct","","`visit_newtype_struct` deserializes a value into a `Value`.",60,null],[11,"visit_seq","","`visit_seq` deserializes a `SeqVisitor` into a `Value`.",60,null],[11,"visit_map","","`visit_map` deserializes a `MapVisitor` into a `Value`.",60,null],[11,"visit_bytes","","`visit_bytes` deserializes a `&amp;[u8]` into a `Value`.",60,null],[11,"visit_byte_buf","","`visit_byte_buf` deserializes a `Vec&lt;u8&gt;` into a `Value`.",60,null],[8,"SeqVisitor","","`SeqVisitor` visits each item in a sequence.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",61,null],[10,"visit","","This returns a `Ok(Some(value))` for the next value in the sequence, or `Ok(None)` if there\nare no more remaining items.",61,null],[10,"end","","This signals to the `SeqVisitor` that the `Visitor` does not expect any more items.",61,null],[11,"size_hint","","Return the lower and upper bound of items remaining in the sequence.",61,null],[8,"MapVisitor","","`MapVisitor` visits each item in a sequence.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",62,null],[11,"visit","","This returns a `Ok(Some((key, value)))` for the next (key-value) pair in the map, or\n`Ok(None)` if there are no more remaining items.",62,null],[10,"visit_key","","This returns a `Ok(Some(key))` for the next key in the map, or `Ok(None)` if there are no\nmore remaining items.",62,null],[10,"visit_value","","This returns a `Ok(value)` for the next value in the map.",62,null],[10,"end","","This signals to the `MapVisitor` that the `Visitor` does not expect any more items.",62,null],[11,"size_hint","","Return the lower and upper bound of items remaining in the sequence.",62,null],[11,"missing_field","","Report that the struct has a field that wasn&#39;t deserialized",62,null],[8,"EnumVisitor","","`EnumVisitor` is a visitor that is created by the `Deserialize` and passed to the\n`Deserializer` in order to deserialize enums.",null,null],[16,"Value","","The value produced by this visitor.",63,null],[10,"visit","","Visit the specific variant with the `VariantVisitor`.",63,null],[8,"VariantVisitor","","`VariantVisitor` is a visitor that is created by the `Deserializer` and passed to the\n`Deserialize` in order to deserialize a specific enum variant.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",64,null],[10,"visit_variant","","`visit_variant` is called to identify which variant to deserialize.",64,null],[11,"visit_unit","","`visit_unit` is called when deserializing a variant with no values.",64,null],[10,"visit_newtype","","`visit_newtype` is called when deserializing a variant with a single value.\nA good default is often to use the `visit_tuple` method to deserialize a `(value,)`.",64,null],[10,"visit_tuple","","`visit_tuple` is called when deserializing a tuple-like variant.\nIf no tuple variants are expected, yield a\n`Err(serde::de::Error::invalid_type(serde::de::Type::TupleVariant))`",64,null],[10,"visit_struct","","`visit_struct` is called when deserializing a struct-like variant.\nIf no struct variants are expected, yield a\n`Err(serde::de::Error::invalid_type(serde::de::Type::StructVariant))`",64,null],[11,"fmt","","",3,null],[11,"eq","","",3,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[0,"iter","serde","Module that contains helper iterators.",null,null],[3,"LineColIterator","serde::iter","Iterator over a byte stream that tracks the current position&#39;s line and column.",null,null],[11,"new","","Construct a new `LineColIterator&lt;Iter&gt;`.",65,{"inputs":[{"name":"iter"}],"output":{"name":"linecoliterator"}}],[11,"line","","Report the current line inside the iterator.",65,null],[11,"col","","Report the current column inside the iterator.",65,null],[11,"get_ref","","Gets a reference to the underlying iterator.",65,null],[11,"get_mut","","Gets a mutable reference to the underlying iterator.",65,null],[11,"into_inner","","Unwraps this `LineColIterator`, returning the underlying iterator.",65,null],[11,"peek","","peeks at the next value",65,null],[11,"next","","",65,null],[0,"ser","serde","Generic serialization framework.\n# For Developers who want to serialize objects\nImplement the `Serialize` trait for the type of objects you want to serialize. Call methods of\nthe `serializer` object. For which methods to call and how to do so, look at the documentation\nof the `Serializer` trait.",null,null],[0,"impls","serde::ser","Implementations for all of Rust&#39;s builtin types. Tuples implement the `Serialize` trait if they\nhave at most 16 fields. Arrays implement the `Serialize` trait if their length is 32 or less.\nYou can always forward array serialization to slice serialization, which works for any length.\nLong tuples are best replaced by tuple structs, for which you can use `derive(Serialize)`. In\nthat case the number of fields is irrelevant.",null,null],[8,"Error","","`Error` is a trait that allows a `Serialize` to generically create a\n`Serializer` error.",null,null],[10,"custom","","Raised when there is a general error when serializing a type.",66,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"invalid_value","","Raised when a `Serialize` was passed an incorrect value.",66,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[8,"Serialize","","A trait that describes a type that can be serialized by a `Serializer`.",null,null],[10,"serialize","","Serializes this value into this serializer.",67,null],[8,"Serializer","","A trait that describes a type that can serialize a stream of values into the underlying format.",null,null],[16,"Error","","The error type that can be returned if some error occurs during serialization.",68,null],[16,"SeqState","","A state object that is initialized by `serialize_seq`, passed to\n`serialize_seq_elt`, and consumed by `serialize_seq_end`. Use `()` if no\nstate is required.",68,null],[16,"TupleState","","A state object that is initialized by `serialize_tuple`, passed to\n`serialize_tuple_elt`, and consumed by `serialize_tuple_end`. Use `()`\nif no state is required.",68,null],[16,"TupleStructState","","A state object that is initialized by `serialize_tuple_struct`, passed\nto `serialize_tuple_struct_elt`, and consumed by\n`serialize_tuple_struct_end`. Use `()` if no state is required.",68,null],[16,"TupleVariantState","","A state object that is initialized by `serialize_tuple_variant`, passed\nto `serialize_tuple_variant_elt`, and consumed by\n`serialize_tuple_variant_end`. Use `()` if no state is required.",68,null],[16,"MapState","","A state object that is initialized by `serialize_map`, passed to\n`serialize_map_elt`, and consumed by `serialize_map_end`. Use `()` if no\nstate is required.",68,null],[16,"StructState","","A state object that is initialized by `serialize_struct`, passed to\n`serialize_struct_elt`, and consumed by `serialize_struct_end`. Use `()`\nif no state is required.",68,null],[16,"StructVariantState","","A state object that is initialized by `serialize_struct_variant`, passed\nto `serialize_struct_variant_elt`, and consumed by\n`serialize_struct_variant_end`. Use `()` if no state is required.",68,null],[10,"serialize_bool","","Serializes a `bool` value.",68,null],[10,"serialize_isize","","Serializes an `isize` value. If the format does not differentiate\nbetween `isize` and `i64`, a reasonable implementation would be to cast\nthe value to `i64` and forward to `serialize_i64`.",68,null],[10,"serialize_i8","","Serializes an `i8` value. If the format does not differentiate between\n`i8` and `i64`, a reasonable implementation would be to cast the value\nto `i64` and forward to `serialize_i64`.",68,null],[10,"serialize_i16","","Serializes an `i16` value. If the format does not differentiate between\n`i16` and `i64`, a reasonable implementation would be to cast the value\nto `i64` and forward to `serialize_i64`.",68,null],[10,"serialize_i32","","Serializes an `i32` value. If the format does not differentiate between\n`i32` and `i64`, a reasonable implementation would be to cast the value\nto `i64` and forward to `serialize_i64`.",68,null],[10,"serialize_i64","","Serializes an `i64` value.",68,null],[10,"serialize_usize","","Serializes a `usize` value. If the format does not differentiate between\n`usize` and `u64`, a reasonable implementation would be to cast the\nvalue to `u64` and forward to `serialize_u64`.",68,null],[10,"serialize_u8","","Serializes a `u8` value. If the format does not differentiate between\n`u8` and `u64`, a reasonable implementation would be to cast the value\nto `u64` and forward to `serialize_u64`.",68,null],[10,"serialize_u16","","Serializes a `u16` value. If the format does not differentiate between\n`u16` and `u64`, a reasonable implementation would be to cast the value\nto `u64` and forward to `serialize_u64`.",68,null],[10,"serialize_u32","","Serializes a `u32` value. If the format does not differentiate between\n`u32` and `u64`, a reasonable implementation would be to cast the value\nto `u64` and forward to `serialize_u64`.",68,null],[10,"serialize_u64","","`Serializes a `u64` value.",68,null],[10,"serialize_f32","","Serializes an `f32` value. If the format does not differentiate between\n`f32` and `f64`, a reasonable implementation would be to cast the value\nto `f64` and forward to `serialize_f64`.",68,null],[10,"serialize_f64","","Serializes an `f64` value.",68,null],[10,"serialize_char","","Serializes a character. If the format does not support characters,\nit is reasonable to serialize it as a single element `str` or a `u32`.",68,null],[10,"serialize_str","","Serializes a `&amp;str`.",68,null],[10,"serialize_bytes","","Enables serializers to serialize byte slices more compactly or more\nefficiently than other types of slices. If no efficient implementation\nis available, a reasonable implementation would be to forward to\n`serialize_seq`. If forwarded, the implementation looks usually just like this:\n```rust\nlet mut state = try!(self.serialize_seq(value));\nfor b in value {\n    try!(self.serialize_seq_elt(&amp;mut state, b));\n}\nself.serialize_seq_end(state)\n```",68,null],[10,"serialize_unit","","Serializes a `()` value. It&#39;s reasonable to just not serialize anything.",68,null],[10,"serialize_unit_struct","","Serializes a unit struct value. A reasonable implementation would be to\nforward to `serialize_unit`.",68,null],[10,"serialize_unit_variant","","Serializes a unit variant, otherwise known as a variant with no\narguments. A reasonable implementation would be to forward to\n`serialize_unit`.",68,null],[10,"serialize_newtype_struct","","Allows a tuple struct with a single element, also known as a newtype\nstruct, to be more efficiently serialized than a tuple struct with\nmultiple items. A reasonable implementation would be to forward to\n`serialize_tuple_struct` or to just serialize the inner value without wrapping.",68,null],[10,"serialize_newtype_variant","","Allows a variant with a single item to be more efficiently serialized\nthan a variant with multiple items. A reasonable implementation would be\nto forward to `serialize_tuple_variant`.",68,null],[10,"serialize_none","","Serializes a `None` value.",68,null],[10,"serialize_some","","Serializes a `Some(...)` value.",68,null],[10,"serialize_seq","","Begins to serialize a sequence. This call must be followed by zero or\nmore calls to `serialize_seq_elt`, then a call to `serialize_seq_end`.",68,null],[10,"serialize_seq_elt","","Serializes a sequence element. Must have previously called\n`serialize_seq`.",68,null],[10,"serialize_seq_end","","Finishes serializing a sequence.",68,null],[10,"serialize_seq_fixed_size","","Begins to serialize a sequence whose length will be known at\ndeserialization time. This call must be followed by zero or more calls\nto `serialize_seq_elt`, then a call to `serialize_seq_end`. A reasonable\nimplementation would be to forward to `serialize_seq`.",68,null],[10,"serialize_tuple","","Begins to serialize a tuple. This call must be followed by zero or more\ncalls to `serialize_tuple_elt`, then a call to `serialize_tuple_end`. A\nreasonable implementation would be to forward to `serialize_seq`.",68,null],[10,"serialize_tuple_elt","","Serializes a tuple element. Must have previously called\n`serialize_tuple`.",68,null],[10,"serialize_tuple_end","","Finishes serializing a tuple.",68,null],[10,"serialize_tuple_struct","","Begins to serialize a tuple struct. This call must be followed by zero\nor more calls to `serialize_tuple_struct_elt`, then a call to\n`serialize_tuple_struct_end`. A reasonable implementation would be to\nforward to `serialize_tuple`.",68,null],[10,"serialize_tuple_struct_elt","","Serializes a tuple struct element. Must have previously called\n`serialize_tuple_struct`.",68,null],[10,"serialize_tuple_struct_end","","Finishes serializing a tuple struct.",68,null],[10,"serialize_tuple_variant","","Begins to serialize a tuple variant. This call must be followed by zero\nor more calls to `serialize_tuple_variant_elt`, then a call to\n`serialize_tuple_variant_end`. A reasonable implementation would be to\nforward to `serialize_tuple_struct`.",68,null],[10,"serialize_tuple_variant_elt","","Serializes a tuple variant element. Must have previously called\n`serialize_tuple_variant`.",68,null],[10,"serialize_tuple_variant_end","","Finishes serializing a tuple variant.",68,null],[10,"serialize_map","","Begins to serialize a map. This call must be followed by zero or more\ncalls to `serialize_map_key` and `serialize_map_value`, then a call to\n`serialize_map_end`.",68,null],[10,"serialize_map_key","","Serialize a map key. Must have previously called `serialize_map`.",68,null],[10,"serialize_map_value","","Serialize a map value. Must have previously called `serialize_map`.",68,null],[10,"serialize_map_end","","Finishes serializing a map.",68,null],[10,"serialize_struct","","Begins to serialize a struct. This call must be followed by zero or more\ncalls to `serialize_struct_elt`, then a call to `serialize_struct_end`.",68,null],[10,"serialize_struct_elt","","Serializes a struct field. Must have previously called\n`serialize_struct`.",68,null],[10,"serialize_struct_end","","Finishes serializing a struct.",68,null],[10,"serialize_struct_variant","","Begins to serialize a struct variant. This call must be followed by zero\nor more calls to `serialize_struct_variant_elt`, then a call to\n`serialize_struct_variant_end`.",68,null],[10,"serialize_struct_variant_elt","","Serialize a struct variant element. Must have previously called\n`serialize_struct_variant`.",68,null],[10,"serialize_struct_variant_end","","Finishes serializing a struct variant.",68,null]],"paths":[[3,"ByteBuf"],[3,"ByteBufVisitor"],[3,"Bytes"],[4,"Type"],[3,"UnitVisitor"],[3,"BoolVisitor"],[3,"PhantomDataVisitor"],[3,"BinaryHeapVisitor"],[3,"BTreeSetVisitor"],[3,"LinkedListVisitor"],[3,"HashSetVisitor"],[3,"VecVisitor"],[3,"VecDequeVisitor"],[3,"TupleVisitor1"],[3,"TupleVisitor2"],[3,"TupleVisitor3"],[3,"TupleVisitor4"],[3,"TupleVisitor5"],[3,"TupleVisitor6"],[3,"TupleVisitor7"],[3,"TupleVisitor8"],[3,"TupleVisitor9"],[3,"TupleVisitor10"],[3,"TupleVisitor11"],[3,"TupleVisitor12"],[3,"TupleVisitor13"],[3,"TupleVisitor14"],[3,"TupleVisitor15"],[3,"TupleVisitor16"],[3,"BTreeMapVisitor"],[3,"HashMapVisitor"],[3,"IgnoredAny"],[4,"Error"],[8,"ValueDeserializer"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U32Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"SeqDeserializer"],[3,"SeqVisitorDeserializer"],[3,"MapDeserializer"],[3,"MapVisitorDeserializer"],[3,"BytesDeserializer"],[3,"ByteBufDeserializer"],[8,"Error"],[8,"Deserialize"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqVisitor"],[8,"MapVisitor"],[8,"EnumVisitor"],[8,"VariantVisitor"],[3,"LineColIterator"],[8,"Error"],[8,"Serialize"],[8,"Serializer"]]};
searchIndex["time"] = {"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a standard library\nimplementation",null,null],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where\nnanoseconds represent the offset from the given second.",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month,\nday, and so on), also called a broken-down time value.",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time\nvalue, including any adjustment for Daylight Saving Time. This is the\nnumber of seconds east of UTC. For example, for U.S. Pacific Daylight\nTime, the value is -7*60*60 = -25200.",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 10&lt;sup&gt;9&lt;/sup&gt; - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format string.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and\nnanoseconds since 1970-01-01T00:00:00Z.",null,{"inputs":[],"output":{"name":"timespec"}}],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"tzset","","",null,{"inputs":[],"output":null}],[5,"empty_tm","","",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at_utc","","Returns the specified time in UTC",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now_utc","","Returns the current time in UTC",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at","","Returns the specified time in the local timezone",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now","","Returns the current time in the local timezone",null,{"inputs":[],"output":{"name":"tm"}}],[5,"strftime","","Formats the time according to the format string.",null,{"inputs":[{"name":"str"},{"name":"tm"}],"output":{"name":"result"}}],[11,"fmt","","",3,null],[11,"fmt","","",4,null],[11,"cmp","","",4,null],[11,"partial_cmp","","",4,null],[11,"lt","","",4,null],[11,"le","","",4,null],[11,"gt","","",4,null],[11,"ge","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"clone","","",4,null],[11,"weeks","","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",4,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,null],[11,"num_days","","Returns the total number of whole days in the duration.",4,null],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,null],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,null],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,null],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,null],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",4,null],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",4,null],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,null],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,null],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,null],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",4,{"inputs":[{"name":"stdduration"}],"output":{"name":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"sub","","",4,null],[11,"mul","","",4,null],[11,"div","","",4,null],[11,"fmt","","",4,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"description","","",5,null],[11,"hash","","",0,null],[11,"fmt","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"new","","",0,{"inputs":[{"name":"i64"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"clone","","",6,null],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",6,{"inputs":[],"output":{"name":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of\n`self` to the value of `later`.",6,null],[11,"fmt","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"cmp","","",7,null],[11,"partial_cmp","","",7,null],[11,"lt","","",7,null],[11,"le","","",7,null],[11,"gt","","",7,null],[11,"ge","","",7,null],[11,"clone","","",7,null],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",7,{"inputs":[],"output":{"name":"steadytime"}}],[11,"fmt","","",7,null],[11,"sub","","",7,null],[11,"sub","","",7,null],[11,"add","","",7,null],[11,"hash","","",1,null],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"add","","The resulting Tm is in UTC.",1,null],[11,"sub","","The resulting Tm is in UTC.",1,null],[11,"sub","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,null],[11,"to_local","","Convert time to the local timezone",1,null],[11,"to_utc","","Convert time to the UTC",1,null],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC, in the local timezone.",1,null],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC.",1,null],[11,"strftime","","Formats the time according to the format string.",1,null],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,null],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,null],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is\ncompatible with ISO 8601.",1,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"description","","",2,null],[11,"fmt","","",3,null]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"OutOfRangeError"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",15,null],[12,"sa_data","","",15,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",16,null],[12,"sin_port","","",16,null],[12,"sin_addr","","",16,null],[12,"sin_zero","","",16,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",17,null],[12,"sin6_port","","",17,null],[12,"sin6_flowinfo","","",17,null],[12,"sin6_addr","","",17,null],[12,"sin6_scope_id","","",17,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",18,null],[12,"sun_path","","",18,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",19,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",20,null],[12,"ai_family","","",20,null],[12,"ai_socktype","","",20,null],[12,"ai_protocol","","",20,null],[12,"ai_addrlen","","",20,null],[12,"ai_addr","","",20,null],[12,"ai_canonname","","",20,null],[12,"ai_next","","",20,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",21,null],[12,"nl_pid","","",21,null],[12,"nl_groups","","",21,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",22,null],[12,"sll_protocol","","",22,null],[12,"sll_ifindex","","",22,null],[12,"sll_hatype","","",22,null],[12,"sll_pkttype","","",22,null],[12,"sll_halen","","",22,null],[12,"sll_addr","","",22,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",23,null],[12,"tm_min","","",23,null],[12,"tm_hour","","",23,null],[12,"tm_mday","","",23,null],[12,"tm_mon","","",23,null],[12,"tm_year","","",23,null],[12,"tm_wday","","",23,null],[12,"tm_yday","","",23,null],[12,"tm_isdst","","",23,null],[12,"tm_gmtoff","","",23,null],[12,"tm_zone","","",23,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",24,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",25,null],[12,"dli_fbase","","",25,null],[12,"dli_sname","","",25,null],[12,"dli_saddr","","",25,null],[3,"epoll_event","","",null,null],[12,"events","","",26,null],[12,"u64","","",26,null],[3,"utsname","","",null,null],[12,"sysname","","",27,null],[12,"nodename","","",27,null],[12,"release","","",27,null],[12,"version","","",27,null],[12,"machine","","",27,null],[12,"domainname","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"dirent","","",null,null],[12,"d_ino","","",29,null],[12,"d_off","","",29,null],[12,"d_reclen","","",29,null],[12,"d_type","","",29,null],[12,"d_name","","",29,null],[3,"dirent64","","",null,null],[12,"d_ino","","",30,null],[12,"d_off","","",30,null],[12,"d_reclen","","",30,null],[12,"d_type","","",30,null],[12,"d_name","","",30,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",31,null],[12,"rlim_max","","",31,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",32,null],[12,"gl_pathv","","",32,null],[12,"gl_offs","","",32,null],[12,"gl_flags","","",32,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",33,null],[12,"ifa_name","","",33,null],[12,"ifa_flags","","",33,null],[12,"ifa_addr","","",33,null],[12,"ifa_netmask","","",33,null],[12,"ifa_ifu","","",33,null],[12,"ifa_data","","",33,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",34,null],[12,"pw_passwd","","",34,null],[12,"pw_uid","","",34,null],[12,"pw_gid","","",34,null],[12,"pw_gecos","","",34,null],[12,"pw_dir","","",34,null],[12,"pw_shell","","",34,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",35,null],[12,"f_frsize","","",35,null],[12,"f_blocks","","",35,null],[12,"f_bfree","","",35,null],[12,"f_bavail","","",35,null],[12,"f_files","","",35,null],[12,"f_ffree","","",35,null],[12,"f_favail","","",35,null],[12,"f_fsid","","",35,null],[12,"f_flag","","",35,null],[12,"f_namemax","","",35,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",36,null],[12,"dqb_bsoftlimit","","",36,null],[12,"dqb_curspace","","",36,null],[12,"dqb_ihardlimit","","",36,null],[12,"dqb_isoftlimit","","",36,null],[12,"dqb_curinodes","","",36,null],[12,"dqb_btime","","",36,null],[12,"dqb_itime","","",36,null],[12,"dqb_valid","","",36,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",37,null],[12,"ssi_errno","","",37,null],[12,"ssi_code","","",37,null],[12,"ssi_pid","","",37,null],[12,"ssi_uid","","",37,null],[12,"ssi_fd","","",37,null],[12,"ssi_tid","","",37,null],[12,"ssi_band","","",37,null],[12,"ssi_overrun","","",37,null],[12,"ssi_trapno","","",37,null],[12,"ssi_status","","",37,null],[12,"ssi_int","","",37,null],[12,"ssi_ptr","","",37,null],[12,"ssi_utime","","",37,null],[12,"ssi_stime","","",37,null],[12,"ssi_addr","","",37,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",38,null],[12,"mq_maxmsg","","",38,null],[12,"mq_msgsize","","",38,null],[12,"mq_curmsgs","","",38,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",39,null],[12,"if_name","","",39,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",40,null],[12,"sa_mask","","",40,null],[12,"sa_flags","","",40,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",41,null],[12,"ss_flags","","",41,null],[12,"ss_size","","",41,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",42,null],[12,"si_errno","","",42,null],[12,"si_code","","",42,null],[12,"_pad","","",42,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",43,null],[12,"gl_pathv","","",43,null],[12,"gl_offs","","",43,null],[12,"gl_flags","","",43,null],[3,"ucred","","",null,null],[12,"pid","","",44,null],[12,"uid","","",44,null],[12,"gid","","",44,null],[3,"statfs","","",null,null],[12,"f_type","","",45,null],[12,"f_bsize","","",45,null],[12,"f_blocks","","",45,null],[12,"f_bfree","","",45,null],[12,"f_bavail","","",45,null],[12,"f_files","","",45,null],[12,"f_ffree","","",45,null],[12,"f_fsid","","",45,null],[12,"f_namelen","","",45,null],[12,"f_frsize","","",45,null],[3,"msghdr","","",null,null],[12,"msg_name","","",46,null],[12,"msg_namelen","","",46,null],[12,"msg_iov","","",46,null],[12,"msg_iovlen","","",46,null],[12,"msg_control","","",46,null],[12,"msg_controllen","","",46,null],[12,"msg_flags","","",46,null],[3,"termios","","",null,null],[12,"c_iflag","","",47,null],[12,"c_oflag","","",47,null],[12,"c_cflag","","",47,null],[12,"c_lflag","","",47,null],[12,"c_line","","",47,null],[12,"c_cc","","",47,null],[12,"c_ispeed","","",47,null],[12,"c_ospeed","","",47,null],[3,"flock","","",null,null],[12,"l_type","","",48,null],[12,"l_whence","","",48,null],[12,"l_start","","",48,null],[12,"l_len","","",48,null],[12,"l_pid","","",48,null],[3,"ipc_perm","","",null,null],[12,"__key","","",49,null],[12,"uid","","",49,null],[12,"gid","","",49,null],[12,"cuid","","",49,null],[12,"cgid","","",49,null],[12,"mode","","",49,null],[12,"__seq","","",49,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",50,null],[12,"shm_segsz","","",50,null],[12,"shm_atime","","",50,null],[12,"shm_dtime","","",50,null],[12,"shm_ctime","","",50,null],[12,"shm_cpid","","",50,null],[12,"shm_lpid","","",50,null],[12,"shm_nattch","","",50,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",51,null],[12,"loads","","",51,null],[12,"totalram","","",51,null],[12,"freeram","","",51,null],[12,"sharedram","","",51,null],[12,"bufferram","","",51,null],[12,"totalswap","","",51,null],[12,"freeswap","","",51,null],[12,"procs","","",51,null],[12,"pad","","",51,null],[12,"totalhigh","","",51,null],[12,"freehigh","","",51,null],[12,"mem_unit","","",51,null],[12,"_f","","",51,null],[3,"stat","","",null,null],[12,"st_dev","","",52,null],[12,"st_ino","","",52,null],[12,"st_nlink","","",52,null],[12,"st_mode","","",52,null],[12,"st_uid","","",52,null],[12,"st_gid","","",52,null],[12,"st_rdev","","",52,null],[12,"st_size","","",52,null],[12,"st_blksize","","",52,null],[12,"st_blocks","","",52,null],[12,"st_atime","","",52,null],[12,"st_atime_nsec","","",52,null],[12,"st_mtime","","",52,null],[12,"st_mtime_nsec","","",52,null],[12,"st_ctime","","",52,null],[12,"st_ctime_nsec","","",52,null],[3,"stat64","","",null,null],[12,"st_dev","","",53,null],[12,"st_ino","","",53,null],[12,"st_nlink","","",53,null],[12,"st_mode","","",53,null],[12,"st_uid","","",53,null],[12,"st_gid","","",53,null],[12,"st_rdev","","",53,null],[12,"st_size","","",53,null],[12,"st_blksize","","",53,null],[12,"st_blocks","","",53,null],[12,"st_atime","","",53,null],[12,"st_atime_nsec","","",53,null],[12,"st_mtime","","",53,null],[12,"st_mtime_nsec","","",53,null],[12,"st_ctime","","",53,null],[12,"st_ctime_nsec","","",53,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",54,null],[12,"exponent","","",54,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",55,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",56,null],[12,"swd","","",56,null],[12,"ftw","","",56,null],[12,"fop","","",56,null],[12,"rip","","",56,null],[12,"rdp","","",56,null],[12,"mxcsr","","",56,null],[12,"mxcr_mask","","",56,null],[12,"_st","","",56,null],[12,"_xmm","","",56,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",57,null],[12,"fpregs","","",57,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",58,null],[12,"uc_link","","",58,null],[12,"uc_stack","","",58,null],[12,"uc_mcontext","","",58,null],[12,"uc_sigmask","","",58,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getgrnam","","",null,null],[5,"getgrgid","","",null,null],[5,"endpwent","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"eventfd","","",null,null],[5,"sysinfo","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"mknodat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"setpwent","","",null,null],[5,"getpwent","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"unshare","","",null,null],[5,"sethostname","","",null,null],[5,"setns","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[11,"clone","","",52,null],[11,"clone","","",53,null],[11,"clone","","",59,null],[11,"clone","","",54,null],[11,"clone","","",55,null],[11,"clone","","",56,null],[11,"clone","","",57,null],[11,"clone","","",58,null],[11,"clone","","",60,null],[11,"clone","","",51,null],[11,"clone","","",40,null],[11,"clone","","",41,null],[11,"clone","","",42,null],[11,"clone","","",43,null],[11,"clone","","",44,null],[11,"clone","","",45,null],[11,"clone","","",46,null],[11,"clone","","",47,null],[11,"clone","","",48,null],[11,"clone","","",49,null],[11,"clone","","",50,null],[11,"clone","","",61,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"clone","","",31,null],[11,"clone","","",32,null],[11,"clone","","",33,null],[11,"clone","","",62,null],[11,"clone","","",63,null],[11,"clone","","",64,null],[11,"clone","","",65,null],[11,"clone","","",66,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","","",36,null],[11,"clone","","",37,null],[11,"clone","","",67,null],[11,"clone","","",38,null],[11,"clone","","",68,null],[11,"clone","","",39,null],[11,"clone","","",15,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[11,"clone","","",21,null],[11,"clone","","",22,null],[11,"clone","","",69,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"clone","","",27,null],[11,"clone","","",28,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[11,"clone","","",14,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"CBAUD","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"EXTPROC","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCCONS","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"if_nameindex"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sysinfo"],[3,"stat"],[3,"stat64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["encoding"] = {"doc":"# Encoding 0.2.32","items":[[0,"types","encoding","Interface to the character encoding.",null,null],[3,"CodecError","encoding::types","Error information from either encoder or decoder.",null,null],[12,"upto","","The byte position of the first remaining byte, with respect to the *current* input.\nFor the `finish` call, this should be no more than zero (since there is no input).\nIt can be negative if the remaining byte is in the prior inputs,\nas long as the remaining byte is not yet processed.\nThe caller should feed the bytes starting from this point again\nin order to continue encoding or decoding after an error.",0,null],[12,"cause","","A human-readable cause of the error.",0,null],[4,"DecoderTrap","","Trap, which handles decoder errors.",null,null],[13,"Strict","","Immediately fails on errors.\nCorresponds to WHATWG &quot;fatal&quot; error algorithm.",1,null],[13,"Replace","","Replaces an error with a U+FFFD (decoder).\nCorresponds to WHATWG &quot;replacement&quot; error algorithm.",1,null],[13,"Ignore","","Silently ignores an error, effectively replacing it with an empty sequence.",1,null],[13,"Call","","Calls given function to handle decoder errors.\nThe function is given the current decoder, input and output writer,\nand should return true only when it is fine to keep going.",1,null],[4,"EncoderTrap","","",null,null],[13,"Strict","","Immediately fails on errors.\nCorresponds to WHATWG &quot;fatal&quot; error algorithm.",2,null],[13,"Replace","","Replaces an error with `?` in given encoding.\nNote that this fails when `?` cannot be represented in given encoding.\nCorresponds to WHATWG &quot;URL&quot; error algorithms.",2,null],[13,"Ignore","","Silently ignores an error, effectively replacing it with an empty sequence.",2,null],[13,"NcrEscape","","Replaces an error with XML numeric character references (e.g. `&amp;#1234;`).\nThe encoder trap fails when NCRs cannot be represented in given encoding.\nCorresponds to WHATWG &quot;&lt;form&gt;&quot; error algorithms.",2,null],[13,"Call","","Calls given function to handle encoder errors.\nThe function is given the current encoder, input and output writer,\nand should return true only when it is fine to keep going.",2,null],[5,"decode","","Determine the encoding by looking for a Byte Order Mark (BOM)\nand decoded a single string in memory.\nReturn the result and the used encoding.",null,null],[6,"EncodingRef","","A trait object using dynamic dispatch which is a sendable reference to the encoding,\nfor code where the encoding is not known at compile-time.",null,null],[6,"EncoderTrapFunc","","A type of the bare function in `EncoderTrap` values.",null,null],[6,"DecoderTrapFunc","","A type of the bare function in `DecoderTrap` values.",null,null],[8,"ByteWriter","","Byte writer used by encoders. In most cases this will be an owned vector of `u8`.",null,null],[11,"writer_hint","","Hints an expected lower bound on the length (in bytes) of the output\nuntil the next call to `writer_hint`,\nso that the writer can reserve the memory for writing.\n`RawEncoder`s are recommended but not required to call this method\nwith an appropriate estimate.\nBy default this method does nothing.",3,null],[10,"write_byte","","Writes a single byte.",3,null],[10,"write_bytes","","Writes a number of bytes.",3,null],[8,"StringWriter","","String writer used by decoders. In most cases this will be an owned string.",null,null],[11,"writer_hint","","Hints an expected lower bound on the length (in bytes) of the output\nuntil the next call to `writer_hint`,\nso that the writer can reserve the memory for writing.\n`RawDecoder`s are recommended but not required to call this method\nwith an appropriate estimate.\nBy default this method does nothing.",4,null],[10,"write_char","","Writes a single character.",4,null],[10,"write_str","","Writes a string.",4,null],[8,"RawEncoder","","Encoder converting a Unicode string into a byte sequence.\nThis is a lower level interface, and normally `Encoding::encode` should be used instead.",null,null],[10,"from_self","","Creates a fresh `RawEncoder` instance which parameters are same as `self`.",5,null],[11,"is_ascii_compatible","","Returns true if this encoding is compatible to ASCII,\ni.e. U+0000 through U+007F always map to bytes 00 through 7F and nothing else.",5,null],[10,"raw_feed","","Feeds given portion of string to the encoder,\npushes the an encoded byte sequence at the end of the given output,\nand returns a byte offset to the first unprocessed character\n(that can be zero when the first such character appeared in the prior calls to `raw_feed`)\nand optional error information (None means success).",5,null],[10,"raw_finish","","Finishes the encoder,\npushes the an encoded byte sequence at the end of the given output,\nand returns optional error information (None means success).\n`remaining` value of the error information, if any, is always an empty string.",5,null],[8,"RawDecoder","","Decoder converting a byte sequence into a Unicode string.\nThis is a lower level interface, and normally `Encoding::decode` should be used instead.",null,null],[10,"from_self","","Creates a fresh `RawDecoder` instance which parameters are same as `self`.",6,null],[11,"is_ascii_compatible","","Returns true if this encoding is compatible to ASCII,\ni.e. bytes 00 through 7F always map to U+0000 through U+007F and nothing else.",6,null],[10,"raw_feed","","Feeds given portion of byte sequence to the encoder,\npushes the a decoded string at the end of the given output,\nand returns an offset to the first unprocessed byte\n(that can be zero when the first such byte appeared in the prior calls to `raw_feed`)\nand optional error information (None means success).",6,null],[10,"raw_finish","","Finishes the decoder,\npushes the a decoded string at the end of the given output,\nand returns optional error information (None means success).",6,null],[8,"Encoding","","Character encoding.",null,null],[10,"name","","Returns the canonical name of given encoding.\nThis name is guaranteed to be unique across built-in encodings,\nbut it is not normative and would be at most arbitrary.",7,null],[11,"whatwg_name","","Returns a name of given encoding defined in the WHATWG Encoding standard, if any.\nThis name often differs from `name` due to the compatibility reason.",7,null],[10,"raw_encoder","","Creates a new encoder.",7,null],[10,"raw_decoder","","Creates a new decoder.",7,null],[11,"encode","","An easy-to-use interface to `RawEncoder`.\nOn the encoder error `trap` is called,\nwhich may return a replacement sequence to continue processing,\nor a failure to return the error.",7,null],[11,"encode_to","","Encode into a `ByteWriter`.",7,null],[11,"decode","","An easy-to-use interface to `RawDecoder`.\nOn the decoder error `trap` is called,\nwhich may return a replacement string to continue processing,\nor a failure to return the error.",7,null],[11,"decode_to","","Decode into a `StringWriter`.",7,null],[11,"trap","","Handles a decoder error. May write to the output writer.\nReturns true only when it is fine to keep going.",1,null],[11,"clone","","",1,null],[11,"trap","","Handles an encoder error. May write to the output writer.\nReturns true only when it is fine to keep going.",2,null],[11,"clone","","",2,null],[0,"codec","encoding","Codec implementations.",null,null],[0,"error","encoding::codec","A placeholder encoding that returns encoder/decoder error for every case.",null,null],[3,"ErrorEncoding","encoding::codec::error","An encoding that returns encoder/decoder error for every case.",null,null],[3,"ErrorEncoder","","An encoder that always returns error.",null,null],[3,"ErrorDecoder","","A decoder that always returns error.",null,null],[11,"clone","","",8,null],[11,"name","","",8,null],[11,"raw_encoder","","",8,null],[11,"raw_decoder","","",8,null],[11,"clone","","",9,null],[11,"new","","",9,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",9,null],[11,"raw_feed","","",9,null],[11,"raw_finish","","",9,null],[11,"clone","","",10,null],[11,"new","","",10,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",10,null],[11,"raw_feed","","",10,null],[11,"raw_finish","","",10,null],[0,"ascii","encoding::codec","7-bit ASCII encoding.",null,null],[3,"ASCIIEncoding","encoding::codec::ascii","ASCII, also known as ISO/IEC 646:US.",null,null],[3,"ASCIIEncoder","","An encoder for ASCII.",null,null],[3,"ASCIIDecoder","","A decoder for ASCII.",null,null],[11,"clone","","",11,null],[11,"name","","",11,null],[11,"raw_encoder","","",11,null],[11,"raw_decoder","","",11,null],[11,"clone","","",12,null],[11,"new","","",12,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",12,null],[11,"is_ascii_compatible","","",12,null],[11,"raw_feed","","",12,null],[11,"raw_finish","","",12,null],[11,"clone","","",13,null],[11,"new","","",13,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",13,null],[11,"is_ascii_compatible","","",13,null],[11,"raw_feed","","",13,null],[11,"raw_finish","","",13,null],[0,"singlebyte","encoding::codec","Common codec implementation for single-byte encodings.",null,null],[3,"SingleByteEncoding","encoding::codec::singlebyte","A common framework for single-byte encodings based on ASCII.",null,null],[12,"name","","",14,null],[12,"whatwg_name","","",14,null],[12,"index_forward","","",14,null],[12,"index_backward","","",14,null],[3,"SingleByteEncoder","","An encoder for single-byte encodings based on ASCII.",null,null],[3,"SingleByteDecoder","","A decoder for single-byte encodings based on ASCII.",null,null],[0,"iso_8859_1","","Algorithmic mapping for ISO 8859-1.",null,null],[5,"forward","encoding::codec::singlebyte::iso_8859_1","",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[11,"clone","encoding::codec::singlebyte","",14,null],[11,"name","","",14,null],[11,"whatwg_name","","",14,null],[11,"raw_encoder","","",14,null],[11,"raw_decoder","","",14,null],[11,"clone","","",15,null],[11,"new","","",15,null],[11,"from_self","","",15,null],[11,"is_ascii_compatible","","",15,null],[11,"raw_feed","","",15,null],[11,"raw_finish","","",15,null],[11,"clone","","",16,null],[11,"new","","",16,null],[11,"from_self","","",16,null],[11,"is_ascii_compatible","","",16,null],[11,"raw_feed","","",16,null],[11,"raw_finish","","",16,null],[0,"utf_8","encoding::codec","UTF-8, the universal encoding.",null,null],[3,"UTF8Encoding","encoding::codec::utf_8","UTF-8 (UCS Transformation Format, 8-bit).",null,null],[3,"UTF8Encoder","","An encoder for UTF-8.",null,null],[3,"UTF8Decoder","","A decoder for UTF-8.",null,null],[5,"from_utf8","","Almost equivalent to `std::str::from_utf8`.\nThis function is provided for the fair benchmark against the stdlib&#39;s UTF-8 conversion\nfunctions, as rust-encoding always allocates a new string.",null,null],[11,"clone","","",17,null],[11,"name","","",17,null],[11,"whatwg_name","","",17,null],[11,"raw_encoder","","",17,null],[11,"raw_decoder","","",17,null],[11,"clone","","",18,null],[11,"new","","",18,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",18,null],[11,"is_ascii_compatible","","",18,null],[11,"raw_feed","","",18,null],[11,"raw_finish","","",18,null],[11,"clone","","",19,null],[11,"new","","",19,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",19,null],[11,"is_ascii_compatible","","",19,null],[11,"raw_feed","","",19,null],[11,"raw_finish","","",19,null],[0,"utf_16","encoding::codec","UTF-16.",null,null],[3,"Little","encoding::codec::utf_16","An implementation type for little endian.",null,null],[3,"Big","","An implementation type for big endian.",null,null],[3,"UTF16Encoding","","UTF-16 (UCS Transformation Format, 16-bit).",null,null],[3,"UTF16Encoder","","An encoder for UTF-16.",null,null],[3,"UTF16Decoder","","A decoder for UTF-16.",null,null],[6,"UTF16LEEncoding","","A type for UTF-16 in little endian.",null,null],[6,"UTF16BEEncoding","","A type for UTF-16 in big endian.",null,null],[17,"UTF_16LE_ENCODING","","An instance for UTF-16 in little endian.",null,null],[17,"UTF_16BE_ENCODING","","An instance for UTF-16 in big endian.",null,null],[11,"clone","","",20,null],[11,"clone","","",21,null],[11,"clone","","",22,null],[11,"name","","",22,null],[11,"whatwg_name","","",22,null],[11,"raw_encoder","","",22,null],[11,"raw_decoder","","",22,null],[11,"clone","","",23,null],[11,"from_self","","",23,null],[11,"raw_feed","","",23,null],[11,"raw_finish","","",23,null],[11,"new","","",24,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",24,null],[11,"raw_feed","","",24,null],[11,"raw_finish","","",24,null],[0,"korean","encoding::codec","Legacy Korean encodings based on KS X 1001.",null,null],[3,"Windows949Encoding","encoding::codec::korean","Windows code page 949.",null,null],[3,"Windows949Encoder","","An encoder for Windows code page 949.",null,null],[11,"clone","","",25,null],[11,"name","","",25,null],[11,"whatwg_name","","",25,null],[11,"raw_encoder","","",25,null],[11,"raw_decoder","","",25,null],[11,"clone","","",26,null],[11,"new","","",26,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",26,null],[11,"is_ascii_compatible","","",26,null],[11,"raw_feed","","",26,null],[11,"raw_finish","","",26,null],[0,"japanese","encoding::codec","Legacy Japanese encodings based on JIS X 0208 and JIS X 0212.",null,null],[3,"EUCJPEncoding","encoding::codec::japanese","EUC-JP. (XXX with asymmetric JIS X 0212 support)",null,null],[3,"EUCJPEncoder","","An encoder for EUC-JP with unused G3 character set.",null,null],[3,"Windows31JEncoding","","Windows code page 932, i.e. Shift_JIS with IBM/NEC extensions.",null,null],[3,"Windows31JEncoder","","An encoder for Shift_JIS with IBM/NEC extensions.",null,null],[3,"ISO2022JPEncoding","","ISO-2022-JP.",null,null],[3,"ISO2022JPEncoder","","An encoder for ISO-2022-JP without JIS X 0212/0213 support.",null,null],[11,"clone","","",27,null],[11,"name","","",27,null],[11,"whatwg_name","","",27,null],[11,"raw_encoder","","",27,null],[11,"raw_decoder","","",27,null],[11,"clone","","",28,null],[11,"new","","",28,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",28,null],[11,"is_ascii_compatible","","",28,null],[11,"raw_feed","","",28,null],[11,"raw_finish","","",28,null],[11,"clone","","",29,null],[11,"name","","",29,null],[11,"whatwg_name","","",29,null],[11,"raw_encoder","","",29,null],[11,"raw_decoder","","",29,null],[11,"clone","","",30,null],[11,"new","","",30,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",30,null],[11,"is_ascii_compatible","","",30,null],[11,"raw_feed","","",30,null],[11,"raw_finish","","",30,null],[11,"clone","","",31,null],[11,"name","","",31,null],[11,"whatwg_name","","",31,null],[11,"raw_encoder","","",31,null],[11,"raw_decoder","","",31,null],[11,"clone","","",32,null],[11,"new","","",32,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",32,null],[11,"is_ascii_compatible","","",32,null],[11,"raw_feed","","",32,null],[11,"raw_finish","","",32,null],[0,"simpchinese","encoding::codec","Legacy simplified Chinese encodings based on GB 2312 and GB 18030.",null,null],[3,"GBK","encoding::codec::simpchinese","An implementation type for GBK.",null,null],[3,"GB18030","","An implementation type for GB18030.",null,null],[3,"GBEncoding","","GBK and GB 18030-2005.",null,null],[3,"GBEncoder","","An encoder for GBK and GB18030.",null,null],[3,"HZEncoding","","HZ. (RFC 1843)",null,null],[3,"HZEncoder","","An encoder for HZ.",null,null],[6,"GBKEncoding","","A type for GBK.",null,null],[6,"GB18030Encoding","","A type for GB18030.",null,null],[17,"GBK_ENCODING","","An instance for GBK.",null,null],[17,"GB18030_ENCODING","","An instance for GB18030.",null,null],[11,"clone","","",33,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"name","","",35,null],[11,"whatwg_name","","",35,null],[11,"raw_encoder","","",35,null],[11,"raw_decoder","","",35,null],[11,"clone","","",36,null],[11,"new","","",36,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",36,null],[11,"is_ascii_compatible","","",36,null],[11,"raw_feed","","",36,null],[11,"raw_finish","","",36,null],[11,"clone","","",37,null],[11,"name","","",37,null],[11,"whatwg_name","","",37,null],[11,"raw_encoder","","",37,null],[11,"raw_decoder","","",37,null],[11,"clone","","",38,null],[11,"new","","",38,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",38,null],[11,"is_ascii_compatible","","",38,null],[11,"raw_feed","","",38,null],[11,"raw_finish","","",38,null],[0,"tradchinese","encoding::codec","Legacy traditional Chinese encodings.",null,null],[3,"BigFive2003Encoding","encoding::codec::tradchinese","Big5-2003 with common extensions. (XXX with asymmetric HKSCS-2008 support)",null,null],[3,"BigFive2003Encoder","","An encoder for Big5-2003.",null,null],[11,"clone","","",39,null],[11,"name","","",39,null],[11,"whatwg_name","","",39,null],[11,"raw_encoder","","",39,null],[11,"raw_decoder","","",39,null],[11,"clone","","",40,null],[11,"new","","",40,{"inputs":[],"output":{"name":"box"}}],[11,"from_self","","",40,null],[11,"is_ascii_compatible","","",40,null],[11,"raw_feed","","",40,null],[11,"raw_finish","","",40,null],[0,"whatwg","encoding::codec","Asymmetric or special encoding constructions required by the WHATWG Encoding standard.",null,null],[3,"EncoderOnlyUTF8Encoding","encoding::codec::whatwg","Replacement encoding used to solve a particular attack vector due to mismatching server and\nclient supports for encodings. It is rarely useful outside.",null,null],[0,"x_user_defined","","Algorithmic mapping for `x-user-defined` encoding.",null,null],[5,"forward","encoding::codec::whatwg::x_user_defined","",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[11,"clone","encoding::codec::whatwg","",41,null],[11,"name","","",41,null],[11,"whatwg_name","","",41,null],[11,"raw_encoder","","",41,null],[11,"raw_decoder","","",41,null],[0,"all","encoding","A list of all supported encodings. Useful for encodings fixed in the compile time.",null,null],[5,"encodings","encoding::all","Returns a list of references to the encodings available.",null,null],[0,"whatwg","","",null,null],[17,"X_USER_DEFINED","encoding::all::whatwg","",null,null],[17,"ISO_8859_8_I","","",null,null],[17,"REPLACEMENT","","",null,null],[17,"ERROR","encoding::all","",null,null],[17,"ASCII","","",null,null],[17,"IBM866","","",null,null],[17,"ISO_8859_1","","",null,null],[17,"ISO_8859_2","","",null,null],[17,"ISO_8859_3","","",null,null],[17,"ISO_8859_4","","",null,null],[17,"ISO_8859_5","","",null,null],[17,"ISO_8859_6","","",null,null],[17,"ISO_8859_7","","",null,null],[17,"ISO_8859_8","","",null,null],[17,"ISO_8859_10","","",null,null],[17,"ISO_8859_13","","",null,null],[17,"ISO_8859_14","","",null,null],[17,"ISO_8859_15","","",null,null],[17,"ISO_8859_16","","",null,null],[17,"KOI8_R","","",null,null],[17,"KOI8_U","","",null,null],[17,"MAC_ROMAN","","",null,null],[17,"WINDOWS_874","","",null,null],[17,"WINDOWS_1250","","",null,null],[17,"WINDOWS_1251","","",null,null],[17,"WINDOWS_1252","","",null,null],[17,"WINDOWS_1253","","",null,null],[17,"WINDOWS_1254","","",null,null],[17,"WINDOWS_1255","","",null,null],[17,"WINDOWS_1256","","",null,null],[17,"WINDOWS_1257","","",null,null],[17,"WINDOWS_1258","","",null,null],[17,"MAC_CYRILLIC","","",null,null],[17,"UTF_8","","",null,null],[17,"UTF_16LE","","",null,null],[17,"UTF_16BE","","",null,null],[17,"WINDOWS_949","","",null,null],[17,"EUC_JP","","",null,null],[17,"WINDOWS_31J","","",null,null],[17,"ISO_2022_JP","","",null,null],[17,"GBK","","",null,null],[17,"GB18030","","",null,null],[17,"HZ","","",null,null],[17,"BIG5_2003","","",null,null],[0,"label","encoding","An interface for retrieving an encoding (or a set of encodings) from a string/numeric label.",null,null],[5,"encoding_from_whatwg_label","encoding::label","Returns an encoding from given label, defined in the WHATWG Encoding standard, if any.\nImplements &quot;get an encoding&quot; algorithm: http://encoding.spec.whatwg.org/#concept-encoding-get",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"encoding_from_windows_code_page","","Returns an encoding from Windows code page number.\nhttp://msdn.microsoft.com/en-us/library/windows/desktop/dd317756%28v=vs.85%29.aspx\nSometimes it can return a *superset* of the requested encoding, e.g. for several CJK encodings.",null,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}]],"paths":[[3,"CodecError"],[4,"DecoderTrap"],[4,"EncoderTrap"],[8,"ByteWriter"],[8,"StringWriter"],[8,"RawEncoder"],[8,"RawDecoder"],[8,"Encoding"],[3,"ErrorEncoding"],[3,"ErrorEncoder"],[3,"ErrorDecoder"],[3,"ASCIIEncoding"],[3,"ASCIIEncoder"],[3,"ASCIIDecoder"],[3,"SingleByteEncoding"],[3,"SingleByteEncoder"],[3,"SingleByteDecoder"],[3,"UTF8Encoding"],[3,"UTF8Encoder"],[3,"UTF8Decoder"],[3,"Little"],[3,"Big"],[3,"UTF16Encoding"],[3,"UTF16Encoder"],[3,"UTF16Decoder"],[3,"Windows949Encoding"],[3,"Windows949Encoder"],[3,"EUCJPEncoding"],[3,"EUCJPEncoder"],[3,"Windows31JEncoding"],[3,"Windows31JEncoder"],[3,"ISO2022JPEncoding"],[3,"ISO2022JPEncoder"],[3,"GBK"],[3,"GB18030"],[3,"GBEncoding"],[3,"GBEncoder"],[3,"HZEncoding"],[3,"HZEncoder"],[3,"BigFive2003Encoding"],[3,"BigFive2003Encoder"],[3,"EncoderOnlyUTF8Encoding"]]};
searchIndex["futf"] = {"doc":"","items":[[3,"Codepoint","futf","Represents a complete or partial UTF-8 codepoint.",null,null],[12,"bytes","","The bytes that make up the partial or full codepoint.",0,null],[12,"rewind","","Start of the codepoint in the buffer, expressed as an offset\nback from `idx`.",0,null],[12,"meaning","","Meaning of the partial or full codepoint.",0,null],[4,"Meaning","","Meaning of a complete or partial UTF-8 codepoint.",null,null],[13,"Whole","","We found a whole codepoint.",1,null],[13,"LeadSurrogate","","We found something that isn&#39;t a valid Unicode codepoint, but\nit *would* correspond to a UTF-16 leading surrogate code unit,\ni.e. a value in the range `U+D800` - `U+DBFF`.",1,null],[13,"TrailSurrogate","","We found something that isn&#39;t a valid Unicode codepoint, but\nit *would* correspond to a UTF-16 trailing surrogate code unit,\ni.e. a value in the range `U+DC00` - `U+DFFF`.",1,null],[13,"Prefix","","We found only a prefix of a codepoint before the buffer ended.",1,null],[13,"Suffix","","We found only a suffix of a codepoint before running off the\nstart of the buffer.",1,null],[5,"classify","","Describes the UTF-8 codepoint containing the byte at index `idx` within\n`buf`.",null,null],[11,"hash","","",1,null],[11,"fmt","","",1,null],[11,"cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"lt","","",1,null],[11,"le","","",1,null],[11,"gt","","",1,null],[11,"ge","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"hash","","",0,null],[11,"fmt","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null]],"paths":[[3,"Codepoint"],[4,"Meaning"]]};
searchIndex["phf"] = {"doc":"Compile time optimized maps and sets.","items":[[8,"PhfHash","phf","A trait implemented by types which can be used in PHF data structures.",null,null],[10,"phf_hash","","Feeds the value into the state given, updating the hasher as necessary.",0,null],[11,"phf_hash_slice","","Feeds a slice of this type into the state provided.",0,null],[3,"Map","","An immutable map constructed at compile time.",null,null],[3,"Set","","An immutable set constructed at compile time.",null,null],[3,"OrderedMap","","An order-preserving immutable map constructed at compile time.",null,null],[3,"OrderedSet","","An order-preserving immutable set constructed at compile time.",null,null],[0,"map","","An immutable map constructed at compile time.",null,null],[3,"Map","phf::map","An immutable map constructed at compile time.",null,null],[3,"Entries","","An iterator over the key/value pairs in a `Map`.",null,null],[3,"Keys","","An iterator over the keys in a `Map`.",null,null],[3,"Values","","An iterator over the values in a `Map`.",null,null],[11,"fmt","","",1,null],[11,"index","","",1,null],[11,"is_empty","","Returns true if the `Map` is empty.",1,null],[11,"len","","Returns the number of entries in the `Map`.",1,null],[11,"contains_key","","Determines if `key` is in the `Map`.",1,null],[11,"get","","Returns a reference to the value that `key` maps to.",1,null],[11,"get_key","","Returns a reference to the map&#39;s internal static instance of the given\nkey.",1,null],[11,"get_entry","","Like `get`, but returns both the key and the value.",1,null],[11,"entries","","Returns an iterator over the key/value pairs in the map.",1,null],[11,"keys","","Returns an iterator over the keys in the map.",1,null],[11,"values","","Returns an iterator over the values in the map.",1,null],[11,"next","","",2,null],[11,"size_hint","","",2,null],[11,"next_back","","",2,null],[11,"next","","",3,null],[11,"size_hint","","",3,null],[11,"next_back","","",3,null],[11,"next","","",4,null],[11,"size_hint","","",4,null],[11,"next_back","","",4,null],[0,"set","phf","An immutable set constructed at compile time.",null,null],[3,"Set","phf::set","An immutable set constructed at compile time.",null,null],[3,"Iter","","An iterator over the values in a `Set`.",null,null],[11,"fmt","","",5,null],[11,"len","","Returns the number of elements in the `Set`.",5,null],[11,"is_empty","","Returns true if the `Set` contains no elements.",5,null],[11,"get_key","","Returns a reference to the set&#39;s internal static instance of the given\nkey.",5,null],[11,"contains","","Returns true if `value` is in the `Set`.",5,null],[11,"iter","","Returns an iterator over the values in the set.",5,null],[11,"is_disjoint","","Returns true if `other` shares no elements with `self`.",5,null],[11,"is_subset","","Returns true if `other` contains all values in `self`.",5,null],[11,"is_superset","","Returns true if `self` contains all values in `other`.",5,null],[11,"next","","",6,null],[11,"size_hint","","",6,null],[11,"next_back","","",6,null],[0,"ordered_map","phf","An order-preserving immutable map constructed at compile time.",null,null],[3,"OrderedMap","phf::ordered_map","An order-preserving immutable map constructed at compile time.",null,null],[3,"Entries","","An iterator over the entries in a `OrderedMap`.",null,null],[3,"Keys","","An iterator over the keys in a `OrderedMap`.",null,null],[3,"Values","","An iterator over the values in a `OrderedMap`.",null,null],[11,"fmt","","",7,null],[11,"index","","",7,null],[11,"len","","Returns the number of entries in the `Map`.",7,null],[11,"is_empty","","Returns true if the `Map` is empty.",7,null],[11,"get","","Returns a reference to the value that `key` maps to.",7,null],[11,"get_key","","Returns a reference to the map&#39;s internal static instance of the given\nkey.",7,null],[11,"contains_key","","Determines if `key` is in the `Map`.",7,null],[11,"get_index","","Returns the index of the key within the list used to initialize\nthe ordered map.",7,null],[11,"index","","Returns references to both the key and values at an index\nwithin the list used to initialize the ordered map. See `.get_index(key)`.",7,null],[11,"get_entry","","Like `get`, but returns both the key and the value.",7,null],[11,"entries","","Returns an iterator over the key/value pairs in the map.",7,null],[11,"keys","","Returns an iterator over the keys in the map.",7,null],[11,"values","","Returns an iterator over the values in the map.",7,null],[11,"next","","",8,null],[11,"size_hint","","",8,null],[11,"next_back","","",8,null],[11,"next","","",9,null],[11,"size_hint","","",9,null],[11,"next_back","","",9,null],[11,"next","","",10,null],[11,"size_hint","","",10,null],[11,"next_back","","",10,null],[0,"ordered_set","phf","An order-preserving immutable set constructed at compile time.",null,null],[3,"OrderedSet","phf::ordered_set","An order-preserving immutable set constructed at compile time.",null,null],[3,"Iter","","An iterator over the values in a `OrderedSet`.",null,null],[11,"fmt","","",11,null],[11,"len","","Returns the number of elements in the `OrderedSet`.",11,null],[11,"is_empty","","Returns true if the `OrderedSet` contains no elements.",11,null],[11,"get_key","","Returns a reference to the set&#39;s internal static instance of the given\nkey.",11,null],[11,"get_index","","Returns the index of the key within the list used to initialize\nthe ordered set.",11,null],[11,"index","","Returns a reference to the key at an index\nwithin the list used to initialize the ordered set. See `.get_index(key)`.",11,null],[11,"contains","","Returns true if `value` is in the `Set`.",11,null],[11,"iter","","Returns an iterator over the values in the set.",11,null],[11,"is_disjoint","","Returns true if `other` shares no elements with `self`.",11,null],[11,"is_subset","","Returns true if `other` contains all values in `self`.",11,null],[11,"is_superset","","Returns true if `self` contains all values in `other`.",11,null],[11,"next","","",12,null],[11,"size_hint","","",12,null],[11,"next_back","","",12,null]],"paths":[[8,"PhfHash"],[3,"Map"],[3,"Entries"],[3,"Keys"],[3,"Values"],[3,"Set"],[3,"Iter"],[3,"OrderedMap"],[3,"Entries"],[3,"Keys"],[3,"Values"],[3,"OrderedSet"],[3,"Iter"]]};
searchIndex["encoding_index_simpchinese"] = {"doc":"Simplified Chinese index tables for\n[rust-encoding](https://github.com/lifthrasiir/rust-encoding).","items":[[0,"gb18030","encoding_index_simpchinese","GB 18030 two-byte area.",null,null],[5,"forward","encoding_index_simpchinese::gb18030","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u16"}],"output":{"name":"u32"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u16"}}],[0,"gb18030_ranges","encoding_index_simpchinese","GB 18030 four-byte area.",null,null],[5,"forward","encoding_index_simpchinese::gb18030_ranges","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}]],"paths":[]};
searchIndex["encoding_index_tradchinese"] = {"doc":"Traditional Chinese index tables for\n[rust-encoding](https://github.com/lifthrasiir/rust-encoding).","items":[[0,"big5","encoding_index_tradchinese","Big5 and HKSCS.",null,null],[5,"forward","encoding_index_tradchinese::big5","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u16"}],"output":{"name":"u32"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u16"}}]],"paths":[]};
searchIndex["encoding_index_korean"] = {"doc":"Korean index tables for [rust-encoding](https://github.com/lifthrasiir/rust-encoding).","items":[[0,"euc_kr","encoding_index_korean","KS X 1001 plus Unified Hangul Code.",null,null],[5,"forward","encoding_index_korean::euc_kr","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u16"}],"output":{"name":"u32"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u16"}}]],"paths":[]};
searchIndex["debug_unreachable"] = {"doc":"`panic!()` in debug builds, optimization hint in release.","items":[[14,"debug_unreachable!","debug_unreachable","`panic!()` in debug builds, optimization hint in release.",null,null]],"paths":[]};
searchIndex["encoding_index_japanese"] = {"doc":"Japanese index tables for [rust-encoding](https://github.com/lifthrasiir/rust-encoding).","items":[[0,"jis0208","encoding_index_japanese","JIS X 0208 with common extensions.",null,null],[5,"forward","encoding_index_japanese::jis0208","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u16"}],"output":{"name":"u32"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u16"}}],[5,"backward_remapped","","Returns the index shift_jis pointer for code point `code`.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u16"}}],[0,"jis0212","encoding_index_japanese","JIS X 0212.",null,null],[5,"forward","encoding_index_japanese::jis0212","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u16"}],"output":{"name":"u32"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u16"}}]],"paths":[]};
searchIndex["kernel32"] = {"doc":"","items":[],"paths":[]};
searchIndex["unreachable"] = {"doc":"# unreachable","items":[[5,"unreachable","unreachable","Hint to the optimizer that any code path which calls this function is\nstatically unreachable and can be removed.",null,{"inputs":[],"output":null}],[8,"UncheckedOptionExt","","An extension trait for `Option&lt;T&gt;` providing unchecked unwrapping methods.",null,null],[10,"unchecked_unwrap","","Get the value out of this Option without checking for None.",0,null],[10,"unchecked_unwrap_none","","Assert that this Option is a None to the optimizer.",0,null],[8,"UncheckedResultExt","","An extension trait for `Result&lt;T, E&gt;` providing unchecked unwrapping methods.",null,null],[10,"unchecked_unwrap_ok","","Get the value out of this Result without checking for Err.",1,null],[10,"unchecked_unwrap_err","","Get the error out of this Result without checking for Ok.",1,null]],"paths":[[8,"UncheckedOptionExt"],[8,"UncheckedResultExt"]]};
searchIndex["encoding_index_singlebyte"] = {"doc":"Single-byte index tables for\n[rust-encoding](https://github.com/lifthrasiir/rust-encoding).","items":[[0,"ibm866","encoding_index_singlebyte","IBM code page 866.",null,null],[5,"forward","encoding_index_singlebyte::ibm866","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_2","encoding_index_singlebyte","ISO 8859-2.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_2","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_3","encoding_index_singlebyte","ISO 8859-3.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_3","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_4","encoding_index_singlebyte","ISO 8859-4.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_4","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_5","encoding_index_singlebyte","ISO 8859-5.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_5","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_6","encoding_index_singlebyte","ISO 8859-6.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_6","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_7","encoding_index_singlebyte","ISO 8859-7.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_7","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_8","encoding_index_singlebyte","ISO 8859-8 (either visual or logical).",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_8","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_10","encoding_index_singlebyte","ISO 8859-10.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_10","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_13","encoding_index_singlebyte","ISO 8859-13.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_13","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_14","encoding_index_singlebyte","ISO 8859-14.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_14","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_15","encoding_index_singlebyte","ISO 8859-15.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_15","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_16","encoding_index_singlebyte","ISO 8859-16.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_16","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"koi8_r","encoding_index_singlebyte","KOI8-R.",null,null],[5,"forward","encoding_index_singlebyte::koi8_r","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"koi8_u","encoding_index_singlebyte","KOI8-U.",null,null],[5,"forward","encoding_index_singlebyte::koi8_u","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"macintosh","encoding_index_singlebyte","MacRoman.",null,null],[5,"forward","encoding_index_singlebyte::macintosh","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_874","encoding_index_singlebyte","Windows code page 874.",null,null],[5,"forward","encoding_index_singlebyte::windows_874","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1250","encoding_index_singlebyte","Windows code page 1250.",null,null],[5,"forward","encoding_index_singlebyte::windows_1250","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1251","encoding_index_singlebyte","Windows code page 1251.",null,null],[5,"forward","encoding_index_singlebyte::windows_1251","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1252","encoding_index_singlebyte","Windows code page 1252.",null,null],[5,"forward","encoding_index_singlebyte::windows_1252","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1253","encoding_index_singlebyte","Windows code page 1253.",null,null],[5,"forward","encoding_index_singlebyte::windows_1253","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1254","encoding_index_singlebyte","Windows code page 1254.",null,null],[5,"forward","encoding_index_singlebyte::windows_1254","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1255","encoding_index_singlebyte","Windows code page 1254.",null,null],[5,"forward","encoding_index_singlebyte::windows_1255","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1256","encoding_index_singlebyte","Windows code page 1256.",null,null],[5,"forward","encoding_index_singlebyte::windows_1256","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1257","encoding_index_singlebyte","Windows code page 1257.",null,null],[5,"forward","encoding_index_singlebyte::windows_1257","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1258","encoding_index_singlebyte","Windows code page 1258.",null,null],[5,"forward","encoding_index_singlebyte::windows_1258","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"x_mac_cyrillic","encoding_index_singlebyte","MacCyrillic.",null,null],[5,"forward","encoding_index_singlebyte::x_mac_cyrillic","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}]],"paths":[]};
searchIndex["phf_shared"] = {"doc":"","items":[[5,"displace","phf_shared","",null,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"u32"}}],[5,"split","","",null,null],[5,"hash","","`key` is from `phf_generator::HashState::key`.",null,{"inputs":[{"name":"t"},{"name":"u64"}],"output":{"name":"u64"}}],[5,"get_index","","Return an index into `phf_generator::HashState::map`.",null,null],[8,"PhfHash","","A trait implemented by types which can be used in PHF data structures.",null,null],[10,"phf_hash","","Feeds the value into the state given, updating the hasher as necessary.",0,null],[11,"phf_hash_slice","","Feeds a slice of this type into the state provided.",0,null]],"paths":[[8,"PhfHash"]]};
searchIndex["void"] = {"doc":"# Void","items":[[4,"Void","void","The empty type for cases which can&#39;t occur.",null,null],[5,"unreachable","","A safe version of `intrinsincs::unreachable`.",null,{"inputs":[{"name":"void"}],"output":null}],[8,"ResultVoidExt","","Extensions to `Result&lt;T, Void&gt;`",null,null],[10,"void_unwrap","","Get the value out of a wrapper.",0,null],[8,"ResultVoidErrExt","","Extensions to `Result&lt;Void, E&gt;`",null,null],[10,"void_unwrap_err","","Get the error out of a wrapper.",1,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"partial_cmp","","",2,null]],"paths":[[8,"ResultVoidExt"],[8,"ResultVoidErrExt"],[4,"Void"]]};
searchIndex["winapi"] = {"doc":"","items":[],"paths":[]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[8,"__Deref","lazy_static","The `Deref` trait is used to specify the functionality of dereferencing\noperations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing",0,null],[10,"deref","","The method called to dereference a value",0,null],[0,"lazy","","",null,null],[3,"Lazy","lazy_static::lazy","",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[11,"get","","",1,null],[14,"__lazy_static_create!","lazy_static","",null,null],[14,"lazy_static!","","",null,null]],"paths":[[8,"__Deref"],[3,"Lazy"]]};
searchIndex["utf8"] = {"doc":"","items":[[3,"Decoder","utf8","A low-level, zero-copy UTF-8 decoder with error handling.",null,null],[3,"LossyDecoder","","A push-based, lossy decoder for UTF-8.\nErrors are replaced with the U+FFFD replacement character.",null,null],[3,"InlineString","","Like `String`, but does not allocate memory and has a fixed capacity of 4 bytes.\nThis is used by `Decoder` to represent either the empty string or a single code point.",null,null],[4,"Result","","",null,null],[13,"Ok","","The input chunk is entirely well-formed.\nThe returned `&amp;str` goes to its end.",0,null],[13,"Incomplete","","The end of the input chunk was reached in the middle of an UTF-8 sequence\nthat is valid so far.\nMore input (up to 3 more bytes) is required to decode that sequence.\nAt the end of the input, the sequence is ill-formed and this is a decoding error.",0,null],[13,"Error","","An ill-formed byte sequence was found. This is a decoding error.\nIf errors are not fatal, decoding should continue after handling the error\n(typically by appending a U+FFFD replacement character to the output)\nby calling `Decoder::decode` again with `remaining_input_after_error` as its argument.",0,null],[12,"remaining_input_after_error","utf8::Result","",0,null],[17,"REPLACEMENT_CHARACTER","utf8","The replacement character, U+FFFD. In lossy decoding, insert it for every decoding error.",null,null],[11,"new","","Create a new decoder.",1,{"inputs":[],"output":{"name":"decoder"}}],[11,"has_incomplete_sequence","","Return whether the input of the last call to `.decode()` returned `Result::Incomplete`.\nIf this is true and there is no more input, this is a decoding error.",1,null],[11,"decode","","Start decoding one chunk of input bytes. The return value is a tuple of:",1,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"new","","Create a new decoder from a callback.",2,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"feed","","Feed one chunk of input into the decoder.",2,null],[11,"drop","","",2,null],[11,"clone","","",3,null],[11,"deref","","",3,null],[11,"len","","Returns the length of `self`.",3,null],[11,"is_empty","","Returns true if this string has a length of zero bytes.",3,null]],"paths":[[4,"Result"],[3,"Decoder"],[3,"LossyDecoder"],[3,"InlineString"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The &quot;payload&quot; of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has\nalready been called or if `set_logger_raw` has not been called yet.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The &quot;error&quot; level.",0,null],[13,"Warn","","The &quot;warn&quot; level.",0,null],[13,"Info","","The &quot;info&quot; level.",0,null],[13,"Debug","","The &quot;debug&quot; level.",0,null],[13,"Trace","","The &quot;trace&quot; level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"shutdown_logger","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be\nlogged.",2,null],[10,"log","","Logs the `LogRecord`.",2,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"cmp","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"partial_cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,null],[11,"args","","The message body.",3,null],[11,"metadata","","Metadata about the log directive.",3,null],[11,"location","","The location of the log directive.",3,null],[11,"level","","The verbosity level of the message.",3,null],[11,"target","","The name of the target of the directive.",3,null],[11,"level","","The verbosity level of the message.",4,null],[11,"target","","The name of the target of the directive.",4,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"module_path","","The module path of the message.",5,null],[11,"file","","The source file containing the message.",5,null],[11,"line","","The line containing the message.",5,null],[11,"fmt","","",6,null],[11,"get","","Gets the current maximum log level filter.",6,null],[11,"set","","Sets the maximum log level.",6,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"description","","",7,null],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"description","","",8,null],[14,"log!","","The standard logging macro.",null,null],[14,"error!","","Logs a message at the error level.",null,null],[14,"warn!","","Logs a message at the warn level.",null,null],[14,"info!","","Logs a message at the info level.",null,null],[14,"debug!","","Logs a message at the debug level.",null,null],[14,"trace!","","Logs a message at the trace level.",null,null],[14,"log_enabled!","","Determines if a message logged at the specified level in that module will\nbe logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["encoding_index_tests"] = {"doc":"Macros and utilities for testing indices.","items":[[14,"single_byte_tests!","encoding_index_tests","Makes a common test suite for single-byte indices.",null,null],[14,"multi_byte_tests!","","Makes a common test suite for multi-byte indices.",null,null],[14,"multi_byte_range_tests!","","Makes a common test suite for multi-byte range indices.",null,null]],"paths":[]};
searchIndex["matches"] = {"doc":"","items":[[14,"matches!","matches","",null,null],[14,"_tt_as_expr_hack!","","Work around &quot;error: unexpected token: `an interpolated tt`&quot;, whatever that means.",null,null]],"paths":[]};
searchIndex["mac"] = {"doc":"# mac","items":[[0,"test","mac","Macros for writing test suites.",null,null],[0,"mem","","Macros for low-level memory manipulation.",null,null],[0,"format","","Macros for string formatting.",null,null],[0,"syntax_ext","","Macros useful when writing procedural syntax extensions.",null,null],[0,"matches","","Pattern Matching macros.",null,null],[14,"test_eq!","","Generate a test function `$name` which asserts that `$left` and `$right`\nare equal.",null,null],[14,"addrs_of!","","Make a tuple of the addresses of some of a struct&#39;s fields.",null,null],[14,"format_if!","","Conditionally perform string formatting.",null,null],[14,"ext_bail!","","Call `span_err` on an `ExtCtxt` and return `DummyResult::any`.",null,null],[14,"ext_bail_if!","","`ext_bail!` if the condition `$e` is true.",null,null],[14,"ext_expect!","","Unwrap the `Option` `$e`, or `ext_bail!`.",null,null],[14,"matches!","","Returns true if an expression matches a pattern.",null,null],[14,"unwrap_or_return!","","Unwraps an `Option` or returns from the function with the specified return\nvalue.",null,null],[14,"do_while!","","Do-while loop.",null,null]],"paths":[]};
initSearch(searchIndex);
