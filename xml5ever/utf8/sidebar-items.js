initSidebarItems({"constant":[["REPLACEMENT_CHARACTER","The replacement character, U+FFFD. In lossy decoding, insert it for every decoding error."]],"enum":[["Result",""]],"struct":[["Decoder","A low-level, zero-copy UTF-8 decoder with error handling.This decoder can process input one chunk at a time, returns `&str` Unicode slices into the given `&[u8]` bytes input, and stops at each error to let the caller deal with it however they choose.For example, `String::from_utf8_lossy` (but returning `String` instead of `Cow`) can be rewritten as:See also `LossyDecoder`."],["InlineString","Like `String`, but does not allocate memory and has a fixed capacity of 4 bytes. This is used by `Decoder` to represent either the empty string or a single code point."],["LossyDecoder","A push-based, lossy decoder for UTF-8. Errors are replaced with the U+FFFD replacement character.Users “push” bytes into the decoder, which in turn “pushes” `&str` slices into a callback.For example, `String::from_utf8_lossy` (but returning `String` instead of `Cow`) can be rewritten as:**Note:** Dropping the decoder signals the end of the input: If the last input chunk ended with an incomplete byte sequence for a code point, this is an error and a replacement character is emitted. Use `std::mem::forget` to inhibit this behavior."]]});