initSidebarItems({"constant":[["GB18030_ENCODING","An instance for GB18030."],["GBK_ENCODING","An instance for GBK."]],"struct":[["GB18030","An implementation type for GB18030.Can be used as a type parameter to `GBEncoding` and `GBEncoder.' (GB18030Decoder is shared by both.)"],["GBEncoder","An encoder for GBK and GB18030.SpecializationThis type is specialized with GBType `T`, which should be either `GBK` or `GB18030`."],["GBEncoding","GBK and GB 18030-2005.The original GBK 1.0 region spans `[81-FE] [40-7E 80-FE]`, and is derived from several different revisions of a family of encodings named \"GBK\":GBK as specified in the normative annex of GB 13000.1-93, the domestic standard equivalent to Unicode 1.1, consisted of characters included in Unicode 1.1 and not in GB 2312-80. Windows code page 936 is the widespread extension to GBK. Due to the popularity of Windows code page 936, a formal encoding based on Windows code page 936 (while adding new characters) was standardized into GBK 1.0. Finally, GB 18030 added four-byte sequences to GBK for becoming a pan-Unicode encoding, while adding new characters to the (former) GBK region again. GB 18030-2005 is a simplified Chinese encoding which extends GBK 1.0 to a pan-Unicode encoding. It assigns four-byte sequences to every Unicode codepoint missing from the GBK area, lexicographically ordered with occasional \"gaps\" for codepoints in the GBK area. Due to this compatibility decision, there is no simple relationship between these four-byte sequences and Unicode codepoints, though there *exists* a relatively simple mapping algorithm with a small lookup table.SpecializationThis type is specialized with GBType `T`, which should be either `GBK` or `GB18030`."],["GBK","An implementation type for GBK.Can be used as a type parameter to `GBEncoding` and `GBEncoder`. (GB18030Decoder is shared by both.)"],["HZEncoder","An encoder for HZ."],["HZEncoding","HZ. (RFC 1843)This is a simplified Chinese encoding based on GB 2312. It bears a resemblance to ISO 2022 encodings in such that the printable escape sequences `~{` and `~}` are used to delimit a sequence of 7-bit-safe GB 2312 sequences. For the comparison, they are equivalent to ISO-2022-CN escape sequences `ESC $ ) A` and `ESC ( B`. Additional escape sequences `~~` (for a literal `~`) and `~\\n` (ignored) are also supported."]],"type":[["GB18030Encoding","A type for GB18030."],["GBKEncoding","A type for GBK."]]});